# HELP application_ready_time_seconds Time taken for the application to be ready to service requests
# TYPE application_ready_time_seconds gauge
application_ready_time_seconds{main_application_class="com.matera.banco.cobranca.CobrancaBancariaApplication"} 36.67
# HELP application_started_time_seconds Time taken to start the application
# TYPE application_started_time_seconds gauge
application_started_time_seconds{main_application_class="com.matera.banco.cobranca.CobrancaBancariaApplication"} 36.661
# HELP disk_free_bytes Usable space for path
# TYPE disk_free_bytes gauge
disk_free_bytes{path="/home/davi.neves/workspace/cobranca/."} 3.2982964224E11
# HELP disk_total_bytes Total space for path
# TYPE disk_total_bytes gauge
disk_total_bytes{path="/home/davi.neves/workspace/cobranca/."} 5.01809635328E11
# HELP executor_active_threads The approximate number of threads that are actively executing tasks
# TYPE executor_active_threads gauge
executor_active_threads{name="lgpdTaskExecutor"} 0.0
executor_active_threads{name="settlementJobAsyncTaskExecutor"} 0.0
executor_active_threads{name="taskScheduler"} 0.0
executor_active_threads{name="threadPoolKafkaCallback"} 0.0
executor_active_threads{name="threadPoolKafkaProducer"} 0.0
executor_active_threads{name="threadPoolQrcodeNewBatchCamelProcessor"} 0.0
executor_active_threads{name="threadPoolQrcodeStatusBatchCamelProcessor"} 0.0
# HELP executor_completed_tasks_total The approximate total number of tasks that have completed execution
# TYPE executor_completed_tasks_total counter
executor_completed_tasks_total{name="lgpdTaskExecutor"} 0.0
executor_completed_tasks_total{name="settlementJobAsyncTaskExecutor"} 0.0
executor_completed_tasks_total{name="taskScheduler"} 0.0
executor_completed_tasks_total{name="threadPoolKafkaCallback"} 0.0
executor_completed_tasks_total{name="threadPoolKafkaProducer"} 0.0
executor_completed_tasks_total{name="threadPoolQrcodeNewBatchCamelProcessor"} 0.0
executor_completed_tasks_total{name="threadPoolQrcodeStatusBatchCamelProcessor"} 0.0
# HELP executor_pool_core_threads The core number of threads for the pool
# TYPE executor_pool_core_threads gauge
executor_pool_core_threads{name="lgpdTaskExecutor"} 1.0
executor_pool_core_threads{name="settlementJobAsyncTaskExecutor"} 1.0
executor_pool_core_threads{name="taskScheduler"} 1.0
executor_pool_core_threads{name="threadPoolKafkaCallback"} 10.0
executor_pool_core_threads{name="threadPoolKafkaProducer"} 10.0
executor_pool_core_threads{name="threadPoolQrcodeNewBatchCamelProcessor"} 4.0
executor_pool_core_threads{name="threadPoolQrcodeStatusBatchCamelProcessor"} 4.0
# HELP executor_pool_max_threads The maximum allowed number of threads in the pool
# TYPE executor_pool_max_threads gauge
executor_pool_max_threads{name="lgpdTaskExecutor"} 2.147483647E9
executor_pool_max_threads{name="settlementJobAsyncTaskExecutor"} 1.0
executor_pool_max_threads{name="taskScheduler"} 2.147483647E9
executor_pool_max_threads{name="threadPoolKafkaCallback"} 10.0
executor_pool_max_threads{name="threadPoolKafkaProducer"} 10.0
executor_pool_max_threads{name="threadPoolQrcodeNewBatchCamelProcessor"} 4.0
executor_pool_max_threads{name="threadPoolQrcodeStatusBatchCamelProcessor"} 4.0
# HELP executor_pool_size_threads The current number of threads in the pool
# TYPE executor_pool_size_threads gauge
executor_pool_size_threads{name="lgpdTaskExecutor"} 0.0
executor_pool_size_threads{name="settlementJobAsyncTaskExecutor"} 0.0
executor_pool_size_threads{name="taskScheduler"} 0.0
executor_pool_size_threads{name="threadPoolKafkaCallback"} 0.0
executor_pool_size_threads{name="threadPoolKafkaProducer"} 0.0
executor_pool_size_threads{name="threadPoolQrcodeNewBatchCamelProcessor"} 0.0
executor_pool_size_threads{name="threadPoolQrcodeStatusBatchCamelProcessor"} 0.0
# HELP executor_queue_remaining_tasks The number of additional elements that this queue can ideally accept without blocking
# TYPE executor_queue_remaining_tasks gauge
executor_queue_remaining_tasks{name="lgpdTaskExecutor"} 2.147483647E9
executor_queue_remaining_tasks{name="settlementJobAsyncTaskExecutor"} 2.147483647E9
executor_queue_remaining_tasks{name="taskScheduler"} 2.147483647E9
executor_queue_remaining_tasks{name="threadPoolKafkaCallback"} 2.147483647E9
executor_queue_remaining_tasks{name="threadPoolKafkaProducer"} 2.147483647E9
executor_queue_remaining_tasks{name="threadPoolQrcodeNewBatchCamelProcessor"} 2.147483647E9
executor_queue_remaining_tasks{name="threadPoolQrcodeStatusBatchCamelProcessor"} 2.147483647E9
# HELP executor_queued_tasks The approximate number of tasks that are queued for execution
# TYPE executor_queued_tasks gauge
executor_queued_tasks{name="lgpdTaskExecutor"} 0.0
executor_queued_tasks{name="settlementJobAsyncTaskExecutor"} 0.0
executor_queued_tasks{name="taskScheduler"} 0.0
executor_queued_tasks{name="threadPoolKafkaCallback"} 0.0
executor_queued_tasks{name="threadPoolKafkaProducer"} 0.0
executor_queued_tasks{name="threadPoolQrcodeNewBatchCamelProcessor"} 0.0
executor_queued_tasks{name="threadPoolQrcodeStatusBatchCamelProcessor"} 0.0
# HELP hikaricp_connections Total connections
# TYPE hikaricp_connections gauge
hikaricp_connections{pool="HikariPool-1"} 9.0
hikaricp_connections{pool="HikariPool-2"} 9.0
# HELP hikaricp_connections_acquire_seconds Connection acquire time
# TYPE hikaricp_connections_acquire_seconds summary
hikaricp_connections_acquire_seconds_count{pool="HikariPool-1"} 7087
hikaricp_connections_acquire_seconds_sum{pool="HikariPool-1"} 2.716593287
hikaricp_connections_acquire_seconds_count{pool="HikariPool-2"} 7
hikaricp_connections_acquire_seconds_sum{pool="HikariPool-2"} 0.216405295
# HELP hikaricp_connections_acquire_seconds_max Connection acquire time
# TYPE hikaricp_connections_acquire_seconds_max gauge
hikaricp_connections_acquire_seconds_max{pool="HikariPool-1"} 0.001694386
hikaricp_connections_acquire_seconds_max{pool="HikariPool-2"} 0.0
# HELP hikaricp_connections_active Active connections
# TYPE hikaricp_connections_active gauge
hikaricp_connections_active{pool="HikariPool-1"} 6.0
hikaricp_connections_active{pool="HikariPool-2"} 6.0
# HELP hikaricp_connections_creation_seconds Connection creation time
# TYPE hikaricp_connections_creation_seconds summary
hikaricp_connections_creation_seconds_count{pool="HikariPool-1"} 25
hikaricp_connections_creation_seconds_sum{pool="HikariPool-1"} 0.765
hikaricp_connections_creation_seconds_count{pool="HikariPool-2"} 12
hikaricp_connections_creation_seconds_sum{pool="HikariPool-2"} 0.422
# HELP hikaricp_connections_creation_seconds_max Connection creation time
# TYPE hikaricp_connections_creation_seconds_max gauge
hikaricp_connections_creation_seconds_max{pool="HikariPool-1"} 0.0
hikaricp_connections_creation_seconds_max{pool="HikariPool-2"} 0.0
# HELP hikaricp_connections_idle Idle connections
# TYPE hikaricp_connections_idle gauge
hikaricp_connections_idle{pool="HikariPool-1"} 3.0
hikaricp_connections_idle{pool="HikariPool-2"} 3.0
# HELP hikaricp_connections_max Max connections
# TYPE hikaricp_connections_max gauge
hikaricp_connections_max{pool="HikariPool-1"} 20.0
hikaricp_connections_max{pool="HikariPool-2"} 20.0
# HELP hikaricp_connections_min Min connections
# TYPE hikaricp_connections_min gauge
hikaricp_connections_min{pool="HikariPool-1"} 3.0
hikaricp_connections_min{pool="HikariPool-2"} 3.0
# HELP hikaricp_connections_pending Pending threads
# TYPE hikaricp_connections_pending gauge
hikaricp_connections_pending{pool="HikariPool-1"} 0.0
hikaricp_connections_pending{pool="HikariPool-2"} 0.0
# HELP hikaricp_connections_timeout_total Connection timeout total count
# TYPE hikaricp_connections_timeout_total counter
hikaricp_connections_timeout_total{pool="HikariPool-1"} 0.0
hikaricp_connections_timeout_total{pool="HikariPool-2"} 0.0
# HELP hikaricp_connections_usage_seconds Connection usage time
# TYPE hikaricp_connections_usage_seconds summary
hikaricp_connections_usage_seconds_count{pool="HikariPool-1"} 7082
hikaricp_connections_usage_seconds_sum{pool="HikariPool-1"} 170357.387
hikaricp_connections_usage_seconds_count{pool="HikariPool-2"} 2
hikaricp_connections_usage_seconds_sum{pool="HikariPool-2"} 200.055
# HELP hikaricp_connections_usage_seconds_max Connection usage time
# TYPE hikaricp_connections_usage_seconds_max gauge
hikaricp_connections_usage_seconds_max{pool="HikariPool-1"} 10.007
hikaricp_connections_usage_seconds_max{pool="HikariPool-2"} 0.0
# HELP http_server_requests_active_seconds  
# TYPE http_server_requests_active_seconds summary
http_server_requests_active_seconds_count{exception="none",method="POST",outcome="SUCCESS",status="200",uri="UNKNOWN"} 0
http_server_requests_active_seconds_sum{exception="none",method="POST",outcome="SUCCESS",status="200",uri="UNKNOWN"} 0.0
# HELP http_server_requests_active_seconds_max  
# TYPE http_server_requests_active_seconds_max gauge
http_server_requests_active_seconds_max{exception="none",method="POST",outcome="SUCCESS",status="200",uri="UNKNOWN"} 0.0
# HELP http_server_requests_seconds  
# TYPE http_server_requests_seconds summary
http_server_requests_seconds_count{error="none",exception="none",method="POST",outcome="CLIENT_ERROR",status="400",uri="/api/v2/titulos"} 1
http_server_requests_seconds_sum{error="none",exception="none",method="POST",outcome="CLIENT_ERROR",status="400",uri="/api/v2/titulos"} 0.036534595
http_server_requests_seconds_count{error="none",exception="none",method="POST",outcome="CLIENT_ERROR",status="403",uri="UNKNOWN"} 3
http_server_requests_seconds_sum{error="none",exception="none",method="POST",outcome="CLIENT_ERROR",status="403",uri="UNKNOWN"} 0.01658907
http_server_requests_seconds_count{error="none",exception="none",method="POST",outcome="SUCCESS",status="200",uri="/api/v2/titulos"} 3
http_server_requests_seconds_sum{error="none",exception="none",method="POST",outcome="SUCCESS",status="200",uri="/api/v2/titulos"} 0.582721206
# HELP http_server_requests_seconds_max  
# TYPE http_server_requests_seconds_max gauge
http_server_requests_seconds_max{error="none",exception="none",method="POST",outcome="CLIENT_ERROR",status="400",uri="/api/v2/titulos"} 0.0
http_server_requests_seconds_max{error="none",exception="none",method="POST",outcome="CLIENT_ERROR",status="403",uri="UNKNOWN"} 0.0
http_server_requests_seconds_max{error="none",exception="none",method="POST",outcome="SUCCESS",status="200",uri="/api/v2/titulos"} 0.0
# HELP jvm_info JVM version info
# TYPE jvm_info gauge
jvm_info{runtime="OpenJDK Runtime Environment",vendor="Eclipse Adoptium",version="17.0.12+7"} 1
# HELP jvm_buffer_count_buffers An estimate of the number of buffers in the pool
# TYPE jvm_buffer_count_buffers gauge
jvm_buffer_count_buffers{id="direct"} 156.0
jvm_buffer_count_buffers{id="mapped"} 0.0
jvm_buffer_count_buffers{id="mapped - 'non-volatile memory'"} 0.0
# HELP jvm_buffer_memory_used_bytes An estimate of the memory that the Java virtual machine is using for this buffer pool
# TYPE jvm_buffer_memory_used_bytes gauge
jvm_buffer_memory_used_bytes{id="direct"} 332152.0
jvm_buffer_memory_used_bytes{id="mapped"} 0.0
jvm_buffer_memory_used_bytes{id="mapped - 'non-volatile memory'"} 0.0
# HELP jvm_buffer_total_capacity_bytes An estimate of the total capacity of the buffers in this pool
# TYPE jvm_buffer_total_capacity_bytes gauge
jvm_buffer_total_capacity_bytes{id="direct"} 332152.0
jvm_buffer_total_capacity_bytes{id="mapped"} 0.0
jvm_buffer_total_capacity_bytes{id="mapped - 'non-volatile memory'"} 0.0
# HELP jvm_classes_loaded_classes The number of classes that are currently loaded in the Java virtual machine
# TYPE jvm_classes_loaded_classes gauge
jvm_classes_loaded_classes 34630.0
# HELP jvm_classes_unloaded_classes_total The total number of classes unloaded since the Java virtual machine has started execution
# TYPE jvm_classes_unloaded_classes_total counter
jvm_classes_unloaded_classes_total 22.0
# HELP jvm_compilation_time_ms_total The approximate accumulated elapsed time spent in compilation
# TYPE jvm_compilation_time_ms_total counter
jvm_compilation_time_ms_total{compiler="HotSpot 64-Bit Tiered Compilers"} 114488.0
# HELP jvm_gc_live_data_size_bytes Size of long-lived heap memory pool after reclamation
# TYPE jvm_gc_live_data_size_bytes gauge
jvm_gc_live_data_size_bytes 1.82132224E8
# HELP jvm_gc_max_data_size_bytes Max size of long-lived heap memory pool
# TYPE jvm_gc_max_data_size_bytes gauge
jvm_gc_max_data_size_bytes 8.334082048E9
# HELP jvm_gc_memory_allocated_bytes_total Incremented for an increase in the size of the (young) heap memory pool after one GC to before the next
# TYPE jvm_gc_memory_allocated_bytes_total counter
jvm_gc_memory_allocated_bytes_total 1.6823353344E10
# HELP jvm_gc_memory_promoted_bytes_total Count of positive increases in the size of the old generation memory pool before GC to after GC
# TYPE jvm_gc_memory_promoted_bytes_total counter
jvm_gc_memory_promoted_bytes_total 2.8730368E7
# HELP jvm_gc_overhead An approximation of the percent of CPU time used by GC activities over the last lookback period or since monitoring began, whichever is shorter, in the range [0..1]
# TYPE jvm_gc_overhead gauge
jvm_gc_overhead 2.6666666666666667E-5
# HELP jvm_gc_pause_seconds Time spent in GC pause
# TYPE jvm_gc_pause_seconds summary
jvm_gc_pause_seconds_count{action="end of minor GC",cause="G1 Evacuation Pause",gc="G1 Young Generation"} 57
jvm_gc_pause_seconds_sum{action="end of minor GC",cause="G1 Evacuation Pause",gc="G1 Young Generation"} 0.191
jvm_gc_pause_seconds_count{action="end of minor GC",cause="Metadata GC Threshold",gc="G1 Young Generation"} 1
jvm_gc_pause_seconds_sum{action="end of minor GC",cause="Metadata GC Threshold",gc="G1 Young Generation"} 0.012
# HELP jvm_gc_pause_seconds_max Time spent in GC pause
# TYPE jvm_gc_pause_seconds_max gauge
jvm_gc_pause_seconds_max{action="end of minor GC",cause="G1 Evacuation Pause",gc="G1 Young Generation"} 0.003
jvm_gc_pause_seconds_max{action="end of minor GC",cause="Metadata GC Threshold",gc="G1 Young Generation"} 0.0
# HELP jvm_memory_committed_bytes The amount of memory in bytes that is committed for the Java virtual machine to use
# TYPE jvm_memory_committed_bytes gauge
jvm_memory_committed_bytes{area="heap",id="G1 Eden Space"} 3.94264576E8
jvm_memory_committed_bytes{area="heap",id="G1 Old Gen"} 2.39075328E8
jvm_memory_committed_bytes{area="heap",id="G1 Survivor Space"} 4194304.0
jvm_memory_committed_bytes{area="nonheap",id="CodeHeap 'non-nmethods'"} 2555904.0
jvm_memory_committed_bytes{area="nonheap",id="CodeHeap 'non-profiled nmethods'"} 2.1168128E7
jvm_memory_committed_bytes{area="nonheap",id="CodeHeap 'profiled nmethods'"} 4.1222144E7
jvm_memory_committed_bytes{area="nonheap",id="Compressed Class Space"} 2.5755648E7
jvm_memory_committed_bytes{area="nonheap",id="Metaspace"} 1.92479232E8
# HELP jvm_memory_max_bytes The maximum amount of memory in bytes that can be used for memory management
# TYPE jvm_memory_max_bytes gauge
jvm_memory_max_bytes{area="heap",id="G1 Eden Space"} -1.0
jvm_memory_max_bytes{area="heap",id="G1 Old Gen"} 8.334082048E9
jvm_memory_max_bytes{area="heap",id="G1 Survivor Space"} -1.0
jvm_memory_max_bytes{area="nonheap",id="CodeHeap 'non-nmethods'"} 5840896.0
jvm_memory_max_bytes{area="nonheap",id="CodeHeap 'non-profiled nmethods'"} 1.22908672E8
jvm_memory_max_bytes{area="nonheap",id="CodeHeap 'profiled nmethods'"} 1.22908672E8
jvm_memory_max_bytes{area="nonheap",id="Compressed Class Space"} 1.073741824E9
jvm_memory_max_bytes{area="nonheap",id="Metaspace"} -1.0
# HELP jvm_memory_usage_after_gc The percentage of long-lived heap pool used after the last GC event, in the range [0..1]
# TYPE jvm_memory_usage_after_gc gauge
jvm_memory_usage_after_gc{area="heap",pool="long-lived"} 0.021859371068193256
# HELP jvm_memory_used_bytes The amount of used memory
# TYPE jvm_memory_used_bytes gauge
jvm_memory_used_bytes{area="heap",id="G1 Eden Space"} 1.4680064E8
jvm_memory_used_bytes{area="heap",id="G1 Old Gen"} 1.82177792E8
jvm_memory_used_bytes{area="heap",id="G1 Survivor Space"} 1203144.0
jvm_memory_used_bytes{area="nonheap",id="CodeHeap 'non-nmethods'"} 1645312.0
jvm_memory_used_bytes{area="nonheap",id="CodeHeap 'non-profiled nmethods'"} 2.1118976E7
jvm_memory_used_bytes{area="nonheap",id="CodeHeap 'profiled nmethods'"} 4.009984E7
jvm_memory_used_bytes{area="nonheap",id="Compressed Class Space"} 2.5034328E7
jvm_memory_used_bytes{area="nonheap",id="Metaspace"} 1.9112272E8
# HELP jvm_threads_daemon_threads The current number of live daemon threads
# TYPE jvm_threads_daemon_threads gauge
jvm_threads_daemon_threads 109.0
# HELP jvm_threads_live_threads The current number of live threads including both daemon and non-daemon threads
# TYPE jvm_threads_live_threads gauge
jvm_threads_live_threads 250.0
# HELP jvm_threads_peak_threads The peak live thread count since the Java virtual machine started or peak was reset
# TYPE jvm_threads_peak_threads gauge
jvm_threads_peak_threads 255.0
# HELP jvm_threads_started_threads_total The total number of application threads started in the JVM
# TYPE jvm_threads_started_threads_total counter
jvm_threads_started_threads_total 3896.0
# HELP jvm_threads_states_threads The current number of threads
# TYPE jvm_threads_states_threads gauge
jvm_threads_states_threads{state="blocked"} 0.0
jvm_threads_states_threads{state="new"} 0.0
jvm_threads_states_threads{state="runnable"} 77.0
jvm_threads_states_threads{state="terminated"} 0.0
jvm_threads_states_threads{state="timed-waiting"} 135.0
jvm_threads_states_threads{state="waiting"} 38.0
# HELP kafka_app_info_start_time_ms Metric indicating start-time-ms
# TYPE kafka_app_info_start_time_ms gauge
kafka_app_info_start_time_ms{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 1.759512806241E12
kafka_app_info_start_time_ms{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 1.759512806256E12
kafka_app_info_start_time_ms{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 1.759512806267E12
kafka_app_info_start_time_ms{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 1.759512806281E12
kafka_app_info_start_time_ms{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 1.759512806289E12
# HELP kafka_consumer_commit_sync_time_ns_total The total time the consumer has spent in commitSync in nanoseconds
# TYPE kafka_consumer_commit_sync_time_ns_total counter
kafka_consumer_commit_sync_time_ns_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.0
kafka_consumer_commit_sync_time_ns_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_commit_sync_time_ns_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_commit_sync_time_ns_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_commit_sync_time_ns_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
# HELP kafka_consumer_committed_time_ns_total The total time the consumer has spent in committed in nanoseconds
# TYPE kafka_consumer_committed_time_ns_total counter
kafka_consumer_committed_time_ns_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 4910761.0
kafka_consumer_committed_time_ns_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 405958.0
kafka_consumer_committed_time_ns_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 18769.0
kafka_consumer_committed_time_ns_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 383163.0
kafka_consumer_committed_time_ns_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 359070.0
# HELP kafka_consumer_connection_close_total The total number of connections closed
# TYPE kafka_consumer_connection_close_total counter
kafka_consumer_connection_close_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 2.0
kafka_consumer_connection_close_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 1.0
kafka_consumer_connection_close_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 2.0
kafka_consumer_connection_close_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 1.0
kafka_consumer_connection_close_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 1.0
# HELP kafka_consumer_connection_close_rate The number of connections closed per second
# TYPE kafka_consumer_connection_close_rate gauge
kafka_consumer_connection_close_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.0
kafka_consumer_connection_close_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_connection_close_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_connection_close_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_connection_close_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
# HELP kafka_consumer_connection_count The current number of active connections.
# TYPE kafka_consumer_connection_count gauge
kafka_consumer_connection_count{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 2.0
kafka_consumer_connection_count{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 2.0
kafka_consumer_connection_count{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 2.0
kafka_consumer_connection_count{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 2.0
kafka_consumer_connection_count{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 2.0
# HELP kafka_consumer_connection_creation_total The total number of new connections established
# TYPE kafka_consumer_connection_creation_total counter
kafka_consumer_connection_creation_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 4.0
kafka_consumer_connection_creation_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 3.0
kafka_consumer_connection_creation_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 4.0
kafka_consumer_connection_creation_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 3.0
kafka_consumer_connection_creation_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 3.0
# HELP kafka_consumer_connection_creation_rate The number of new connections established per second
# TYPE kafka_consumer_connection_creation_rate gauge
kafka_consumer_connection_creation_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.0
kafka_consumer_connection_creation_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_connection_creation_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_connection_creation_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_connection_creation_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
# HELP kafka_consumer_coordinator_assigned_partitions The number of partitions currently assigned to this consumer
# TYPE kafka_consumer_coordinator_assigned_partitions gauge
kafka_consumer_coordinator_assigned_partitions{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 1.0
kafka_consumer_coordinator_assigned_partitions{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_coordinator_assigned_partitions{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_coordinator_assigned_partitions{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_coordinator_assigned_partitions{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
# HELP kafka_consumer_coordinator_commit_total The total number of commit calls
# TYPE kafka_consumer_coordinator_commit_total counter
kafka_consumer_coordinator_commit_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.0
kafka_consumer_coordinator_commit_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_coordinator_commit_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_coordinator_commit_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_coordinator_commit_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
# HELP kafka_consumer_coordinator_commit_latency_avg The average time taken for a commit request
# TYPE kafka_consumer_coordinator_commit_latency_avg gauge
kafka_consumer_coordinator_commit_latency_avg{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} NaN
kafka_consumer_coordinator_commit_latency_avg{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_coordinator_commit_latency_avg{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_coordinator_commit_latency_avg{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_coordinator_commit_latency_avg{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
# HELP kafka_consumer_coordinator_commit_latency_max The max time taken for a commit request
# TYPE kafka_consumer_coordinator_commit_latency_max gauge
kafka_consumer_coordinator_commit_latency_max{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} NaN
kafka_consumer_coordinator_commit_latency_max{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_coordinator_commit_latency_max{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_coordinator_commit_latency_max{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_coordinator_commit_latency_max{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
# HELP kafka_consumer_coordinator_commit_rate The number of commit calls per second
# TYPE kafka_consumer_coordinator_commit_rate gauge
kafka_consumer_coordinator_commit_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.0
kafka_consumer_coordinator_commit_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_coordinator_commit_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_coordinator_commit_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_coordinator_commit_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
# HELP kafka_consumer_coordinator_failed_rebalance_total The total number of failed rebalance events
# TYPE kafka_consumer_coordinator_failed_rebalance_total counter
kafka_consumer_coordinator_failed_rebalance_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 1.0
kafka_consumer_coordinator_failed_rebalance_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 2.0
kafka_consumer_coordinator_failed_rebalance_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 2.0
kafka_consumer_coordinator_failed_rebalance_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 2.0
kafka_consumer_coordinator_failed_rebalance_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 2.0
# HELP kafka_consumer_coordinator_failed_rebalance_rate_per_hour The number of failed rebalance events per hour
# TYPE kafka_consumer_coordinator_failed_rebalance_rate_per_hour gauge
kafka_consumer_coordinator_failed_rebalance_rate_per_hour{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.0
kafka_consumer_coordinator_failed_rebalance_rate_per_hour{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_coordinator_failed_rebalance_rate_per_hour{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_coordinator_failed_rebalance_rate_per_hour{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_coordinator_failed_rebalance_rate_per_hour{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
# HELP kafka_consumer_coordinator_heartbeat_total The total number of heartbeats
# TYPE kafka_consumer_coordinator_heartbeat_total counter
kafka_consumer_coordinator_heartbeat_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 2155.0
kafka_consumer_coordinator_heartbeat_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 2155.0
kafka_consumer_coordinator_heartbeat_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 2155.0
kafka_consumer_coordinator_heartbeat_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 2155.0
kafka_consumer_coordinator_heartbeat_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 2155.0
# HELP kafka_consumer_coordinator_heartbeat_rate The number of heartbeats per second
# TYPE kafka_consumer_coordinator_heartbeat_rate gauge
kafka_consumer_coordinator_heartbeat_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.5062165866185967
kafka_consumer_coordinator_heartbeat_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.5049851094134403
kafka_consumer_coordinator_heartbeat_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.5048763668604078
kafka_consumer_coordinator_heartbeat_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.5049261083743842
kafka_consumer_coordinator_heartbeat_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.5047334145831025
# HELP kafka_consumer_coordinator_heartbeat_response_time_max The max time taken to receive a response to a heartbeat request
# TYPE kafka_consumer_coordinator_heartbeat_response_time_max gauge
kafka_consumer_coordinator_heartbeat_response_time_max{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 2.0
kafka_consumer_coordinator_heartbeat_response_time_max{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 1.0
kafka_consumer_coordinator_heartbeat_response_time_max{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 1.0
kafka_consumer_coordinator_heartbeat_response_time_max{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 2.0
kafka_consumer_coordinator_heartbeat_response_time_max{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 1.0
# HELP kafka_consumer_coordinator_join_total The total number of group joins
# TYPE kafka_consumer_coordinator_join_total counter
kafka_consumer_coordinator_join_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 1.0
kafka_consumer_coordinator_join_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 2.0
kafka_consumer_coordinator_join_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 2.0
kafka_consumer_coordinator_join_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 2.0
kafka_consumer_coordinator_join_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 2.0
# HELP kafka_consumer_coordinator_join_rate The number of group joins per second
# TYPE kafka_consumer_coordinator_join_rate gauge
kafka_consumer_coordinator_join_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.0
kafka_consumer_coordinator_join_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_coordinator_join_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_coordinator_join_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_coordinator_join_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
# HELP kafka_consumer_coordinator_join_time_avg The average time taken for a group rejoin
# TYPE kafka_consumer_coordinator_join_time_avg gauge
kafka_consumer_coordinator_join_time_avg{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} NaN
kafka_consumer_coordinator_join_time_avg{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_coordinator_join_time_avg{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_coordinator_join_time_avg{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_coordinator_join_time_avg{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
# HELP kafka_consumer_coordinator_join_time_max The max time taken for a group rejoin
# TYPE kafka_consumer_coordinator_join_time_max gauge
kafka_consumer_coordinator_join_time_max{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} NaN
kafka_consumer_coordinator_join_time_max{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_coordinator_join_time_max{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_coordinator_join_time_max{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_coordinator_join_time_max{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
# HELP kafka_consumer_coordinator_last_heartbeat_seconds_ago The number of seconds since the last coordinator heartbeat was sent
# TYPE kafka_consumer_coordinator_last_heartbeat_seconds_ago gauge
kafka_consumer_coordinator_last_heartbeat_seconds_ago{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.0
kafka_consumer_coordinator_last_heartbeat_seconds_ago{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 1.0
kafka_consumer_coordinator_last_heartbeat_seconds_ago{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 1.0
kafka_consumer_coordinator_last_heartbeat_seconds_ago{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 1.0
kafka_consumer_coordinator_last_heartbeat_seconds_ago{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 1.0
# HELP kafka_consumer_coordinator_last_rebalance_seconds_ago The number of seconds since the last successful rebalance event
# TYPE kafka_consumer_coordinator_last_rebalance_seconds_ago gauge
kafka_consumer_coordinator_last_rebalance_seconds_ago{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 4311.0
kafka_consumer_coordinator_last_rebalance_seconds_ago{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 4311.0
kafka_consumer_coordinator_last_rebalance_seconds_ago{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 4311.0
kafka_consumer_coordinator_last_rebalance_seconds_ago{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 4311.0
kafka_consumer_coordinator_last_rebalance_seconds_ago{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 4311.0
# HELP kafka_consumer_coordinator_partition_assigned_latency_avg The average time taken for a partition-assigned rebalance listener callback
# TYPE kafka_consumer_coordinator_partition_assigned_latency_avg gauge
kafka_consumer_coordinator_partition_assigned_latency_avg{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} NaN
kafka_consumer_coordinator_partition_assigned_latency_avg{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_coordinator_partition_assigned_latency_avg{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_coordinator_partition_assigned_latency_avg{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_coordinator_partition_assigned_latency_avg{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
# HELP kafka_consumer_coordinator_partition_assigned_latency_max The max time taken for a partition-assigned rebalance listener callback
# TYPE kafka_consumer_coordinator_partition_assigned_latency_max gauge
kafka_consumer_coordinator_partition_assigned_latency_max{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} NaN
kafka_consumer_coordinator_partition_assigned_latency_max{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_coordinator_partition_assigned_latency_max{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_coordinator_partition_assigned_latency_max{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_coordinator_partition_assigned_latency_max{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
# HELP kafka_consumer_coordinator_partition_lost_latency_avg The average time taken for a partition-lost rebalance listener callback
# TYPE kafka_consumer_coordinator_partition_lost_latency_avg gauge
kafka_consumer_coordinator_partition_lost_latency_avg{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} NaN
kafka_consumer_coordinator_partition_lost_latency_avg{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_coordinator_partition_lost_latency_avg{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_coordinator_partition_lost_latency_avg{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_coordinator_partition_lost_latency_avg{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
# HELP kafka_consumer_coordinator_partition_lost_latency_max The max time taken for a partition-lost rebalance listener callback
# TYPE kafka_consumer_coordinator_partition_lost_latency_max gauge
kafka_consumer_coordinator_partition_lost_latency_max{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} NaN
kafka_consumer_coordinator_partition_lost_latency_max{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_coordinator_partition_lost_latency_max{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_coordinator_partition_lost_latency_max{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_coordinator_partition_lost_latency_max{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
# HELP kafka_consumer_coordinator_partition_revoked_latency_avg The average time taken for a partition-revoked rebalance listener callback
# TYPE kafka_consumer_coordinator_partition_revoked_latency_avg gauge
kafka_consumer_coordinator_partition_revoked_latency_avg{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} NaN
kafka_consumer_coordinator_partition_revoked_latency_avg{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_coordinator_partition_revoked_latency_avg{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_coordinator_partition_revoked_latency_avg{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_coordinator_partition_revoked_latency_avg{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
# HELP kafka_consumer_coordinator_partition_revoked_latency_max The max time taken for a partition-revoked rebalance listener callback
# TYPE kafka_consumer_coordinator_partition_revoked_latency_max gauge
kafka_consumer_coordinator_partition_revoked_latency_max{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} NaN
kafka_consumer_coordinator_partition_revoked_latency_max{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_coordinator_partition_revoked_latency_max{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_coordinator_partition_revoked_latency_max{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_coordinator_partition_revoked_latency_max{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
# HELP kafka_consumer_coordinator_rebalance_total The total number of successful rebalance events, each event is composed of several failed re-trials until it succeeded
# TYPE kafka_consumer_coordinator_rebalance_total counter
kafka_consumer_coordinator_rebalance_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 1.0
kafka_consumer_coordinator_rebalance_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 1.0
kafka_consumer_coordinator_rebalance_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 1.0
kafka_consumer_coordinator_rebalance_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 1.0
kafka_consumer_coordinator_rebalance_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 1.0
# HELP kafka_consumer_coordinator_rebalance_latency_total The total number of milliseconds this consumer has spent in successful rebalances since creation
# TYPE kafka_consumer_coordinator_rebalance_latency_total counter
kafka_consumer_coordinator_rebalance_latency_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 65.0
kafka_consumer_coordinator_rebalance_latency_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 63.0
kafka_consumer_coordinator_rebalance_latency_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 66.0
kafka_consumer_coordinator_rebalance_latency_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 63.0
kafka_consumer_coordinator_rebalance_latency_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 63.0
# HELP kafka_consumer_coordinator_rebalance_latency_avg The average time taken for a group to complete a successful rebalance, which may be composed of several failed re-trials until it succeeded
# TYPE kafka_consumer_coordinator_rebalance_latency_avg gauge
kafka_consumer_coordinator_rebalance_latency_avg{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} NaN
kafka_consumer_coordinator_rebalance_latency_avg{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_coordinator_rebalance_latency_avg{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_coordinator_rebalance_latency_avg{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_coordinator_rebalance_latency_avg{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
# HELP kafka_consumer_coordinator_rebalance_latency_max The max time taken for a group to complete a successful rebalance, which may be composed of several failed re-trials until it succeeded
# TYPE kafka_consumer_coordinator_rebalance_latency_max gauge
kafka_consumer_coordinator_rebalance_latency_max{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} NaN
kafka_consumer_coordinator_rebalance_latency_max{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_coordinator_rebalance_latency_max{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_coordinator_rebalance_latency_max{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_coordinator_rebalance_latency_max{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
# HELP kafka_consumer_coordinator_rebalance_rate_per_hour The number of successful rebalance events per hour, each event is composed of several failed re-trials until it succeeded
# TYPE kafka_consumer_coordinator_rebalance_rate_per_hour gauge
kafka_consumer_coordinator_rebalance_rate_per_hour{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.0
kafka_consumer_coordinator_rebalance_rate_per_hour{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_coordinator_rebalance_rate_per_hour{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_coordinator_rebalance_rate_per_hour{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_coordinator_rebalance_rate_per_hour{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
# HELP kafka_consumer_coordinator_sync_total The total number of group syncs
# TYPE kafka_consumer_coordinator_sync_total counter
kafka_consumer_coordinator_sync_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 1.0
kafka_consumer_coordinator_sync_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 1.0
kafka_consumer_coordinator_sync_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 1.0
kafka_consumer_coordinator_sync_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 1.0
kafka_consumer_coordinator_sync_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 1.0
# HELP kafka_consumer_coordinator_sync_rate The number of group syncs per second
# TYPE kafka_consumer_coordinator_sync_rate gauge
kafka_consumer_coordinator_sync_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.0
kafka_consumer_coordinator_sync_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_coordinator_sync_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_coordinator_sync_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_coordinator_sync_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
# HELP kafka_consumer_coordinator_sync_time_avg The average time taken for a group sync
# TYPE kafka_consumer_coordinator_sync_time_avg gauge
kafka_consumer_coordinator_sync_time_avg{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} NaN
kafka_consumer_coordinator_sync_time_avg{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_coordinator_sync_time_avg{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_coordinator_sync_time_avg{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_coordinator_sync_time_avg{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
# HELP kafka_consumer_coordinator_sync_time_max The max time taken for a group sync
# TYPE kafka_consumer_coordinator_sync_time_max gauge
kafka_consumer_coordinator_sync_time_max{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} NaN
kafka_consumer_coordinator_sync_time_max{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_coordinator_sync_time_max{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_coordinator_sync_time_max{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_coordinator_sync_time_max{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
# HELP kafka_consumer_failed_authentication_total The total number of connections with failed authentication
# TYPE kafka_consumer_failed_authentication_total counter
kafka_consumer_failed_authentication_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.0
kafka_consumer_failed_authentication_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_failed_authentication_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_failed_authentication_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_failed_authentication_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
# HELP kafka_consumer_failed_authentication_rate The number of connections with failed authentication per second
# TYPE kafka_consumer_failed_authentication_rate gauge
kafka_consumer_failed_authentication_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.0
kafka_consumer_failed_authentication_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_failed_authentication_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_failed_authentication_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_failed_authentication_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
# HELP kafka_consumer_failed_reauthentication_total The total number of failed re-authentication of connections
# TYPE kafka_consumer_failed_reauthentication_total counter
kafka_consumer_failed_reauthentication_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.0
kafka_consumer_failed_reauthentication_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_failed_reauthentication_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_failed_reauthentication_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_failed_reauthentication_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
# HELP kafka_consumer_failed_reauthentication_rate The number of failed re-authentication of connections per second
# TYPE kafka_consumer_failed_reauthentication_rate gauge
kafka_consumer_failed_reauthentication_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.0
kafka_consumer_failed_reauthentication_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_failed_reauthentication_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_failed_reauthentication_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_failed_reauthentication_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
# HELP kafka_consumer_fetch_manager_bytes_consumed_total The total number of bytes consumed for a topic
# TYPE kafka_consumer_fetch_manager_bytes_consumed_total counter
kafka_consumer_fetch_manager_bytes_consumed_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0",topic="local_core_event_writeoffInstantPaymentsDebit-sdcobr-retry-1"} 0.0
# HELP kafka_consumer_fetch_manager_bytes_consumed_rate The average number of bytes consumed per second for a topic
# TYPE kafka_consumer_fetch_manager_bytes_consumed_rate gauge
kafka_consumer_fetch_manager_bytes_consumed_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0",topic="local_core_event_writeoffInstantPaymentsDebit-sdcobr-retry-1"} 0.0
# HELP kafka_consumer_fetch_manager_fetch_total The total number of fetch requests.
# TYPE kafka_consumer_fetch_manager_fetch_total counter
kafka_consumer_fetch_manager_fetch_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 8609.0
kafka_consumer_fetch_manager_fetch_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_fetch_manager_fetch_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_fetch_manager_fetch_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_fetch_manager_fetch_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
# HELP kafka_consumer_fetch_manager_fetch_latency_avg The average time taken for a fetch request.
# TYPE kafka_consumer_fetch_manager_fetch_latency_avg gauge
kafka_consumer_fetch_manager_fetch_latency_avg{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 500.81879194630875
kafka_consumer_fetch_manager_fetch_latency_avg{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_fetch_manager_fetch_latency_avg{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_fetch_manager_fetch_latency_avg{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_fetch_manager_fetch_latency_avg{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
# HELP kafka_consumer_fetch_manager_fetch_latency_max The max time taken for any fetch request.
# TYPE kafka_consumer_fetch_manager_fetch_latency_max gauge
kafka_consumer_fetch_manager_fetch_latency_max{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 502.0
kafka_consumer_fetch_manager_fetch_latency_max{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_fetch_manager_fetch_latency_max{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_fetch_manager_fetch_latency_max{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_fetch_manager_fetch_latency_max{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
# HELP kafka_consumer_fetch_manager_fetch_rate The number of fetch requests per second.
# TYPE kafka_consumer_fetch_manager_fetch_rate gauge
kafka_consumer_fetch_manager_fetch_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 2.005481649842904
kafka_consumer_fetch_manager_fetch_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_fetch_manager_fetch_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_fetch_manager_fetch_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_fetch_manager_fetch_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
# HELP kafka_consumer_fetch_manager_fetch_size_avg The average number of bytes fetched per request for a topic
# TYPE kafka_consumer_fetch_manager_fetch_size_avg gauge
kafka_consumer_fetch_manager_fetch_size_avg{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0",topic="local_core_event_writeoffInstantPaymentsDebit-sdcobr-retry-1"} NaN
# HELP kafka_consumer_fetch_manager_fetch_size_max The maximum number of bytes fetched per request for a topic
# TYPE kafka_consumer_fetch_manager_fetch_size_max gauge
kafka_consumer_fetch_manager_fetch_size_max{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0",topic="local_core_event_writeoffInstantPaymentsDebit-sdcobr-retry-1"} NaN
# HELP kafka_consumer_fetch_manager_fetch_throttle_time_avg The average throttle time in ms
# TYPE kafka_consumer_fetch_manager_fetch_throttle_time_avg gauge
kafka_consumer_fetch_manager_fetch_throttle_time_avg{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.0
kafka_consumer_fetch_manager_fetch_throttle_time_avg{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_fetch_manager_fetch_throttle_time_avg{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_fetch_manager_fetch_throttle_time_avg{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_fetch_manager_fetch_throttle_time_avg{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
# HELP kafka_consumer_fetch_manager_fetch_throttle_time_max The maximum throttle time in ms
# TYPE kafka_consumer_fetch_manager_fetch_throttle_time_max gauge
kafka_consumer_fetch_manager_fetch_throttle_time_max{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.0
kafka_consumer_fetch_manager_fetch_throttle_time_max{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_fetch_manager_fetch_throttle_time_max{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_fetch_manager_fetch_throttle_time_max{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_fetch_manager_fetch_throttle_time_max{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
# HELP kafka_consumer_fetch_manager_preferred_read_replica The current read replica for the partition, or -1 if reading from leader
# TYPE kafka_consumer_fetch_manager_preferred_read_replica gauge
kafka_consumer_fetch_manager_preferred_read_replica{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",partition="0",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0",topic="local_core_event_writeoffInstantPaymentsDebit-sdcobr-retry-1"} -1.0
# HELP kafka_consumer_fetch_manager_records_consumed_total The total number of records consumed for a topic
# TYPE kafka_consumer_fetch_manager_records_consumed_total counter
kafka_consumer_fetch_manager_records_consumed_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0",topic="local_core_event_writeoffInstantPaymentsDebit-sdcobr-retry-1"} 0.0
# HELP kafka_consumer_fetch_manager_records_consumed_rate The average number of records consumed per second for a topic
# TYPE kafka_consumer_fetch_manager_records_consumed_rate gauge
kafka_consumer_fetch_manager_records_consumed_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0",topic="local_core_event_writeoffInstantPaymentsDebit-sdcobr-retry-1"} 0.0
# HELP kafka_consumer_fetch_manager_records_lag The latest lag of the partition
# TYPE kafka_consumer_fetch_manager_records_lag gauge
kafka_consumer_fetch_manager_records_lag{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",partition="0",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0",topic="local_core_event_writeoffInstantPaymentsDebit-sdcobr-retry-1"} 0.0
# HELP kafka_consumer_fetch_manager_records_lag_avg The average lag of the partition
# TYPE kafka_consumer_fetch_manager_records_lag_avg gauge
kafka_consumer_fetch_manager_records_lag_avg{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",partition="0",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0",topic="local_core_event_writeoffInstantPaymentsDebit-sdcobr-retry-1"} NaN
# HELP kafka_consumer_fetch_manager_records_lag_max The max lag of the partition
# TYPE kafka_consumer_fetch_manager_records_lag_max gauge
kafka_consumer_fetch_manager_records_lag_max{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",partition="0",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0",topic="local_core_event_writeoffInstantPaymentsDebit-sdcobr-retry-1"} NaN
# HELP kafka_consumer_fetch_manager_records_lead The latest lead of the partition
# TYPE kafka_consumer_fetch_manager_records_lead gauge
kafka_consumer_fetch_manager_records_lead{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",partition="0",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0",topic="local_core_event_writeoffInstantPaymentsDebit-sdcobr-retry-1"} 0.0
# HELP kafka_consumer_fetch_manager_records_lead_avg The average lead of the partition
# TYPE kafka_consumer_fetch_manager_records_lead_avg gauge
kafka_consumer_fetch_manager_records_lead_avg{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",partition="0",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0",topic="local_core_event_writeoffInstantPaymentsDebit-sdcobr-retry-1"} NaN
# HELP kafka_consumer_fetch_manager_records_lead_min The min lead of the partition
# TYPE kafka_consumer_fetch_manager_records_lead_min gauge
kafka_consumer_fetch_manager_records_lead_min{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",partition="0",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0",topic="local_core_event_writeoffInstantPaymentsDebit-sdcobr-retry-1"} NaN
# HELP kafka_consumer_fetch_manager_records_per_request_avg The average number of records in each request for a topic
# TYPE kafka_consumer_fetch_manager_records_per_request_avg gauge
kafka_consumer_fetch_manager_records_per_request_avg{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0",topic="local_core_event_writeoffInstantPaymentsDebit-sdcobr-retry-1"} NaN
# HELP kafka_consumer_incoming_byte_total The total number of bytes read off all sockets
# TYPE kafka_consumer_incoming_byte_total counter
kafka_consumer_incoming_byte_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 224005.0
kafka_consumer_incoming_byte_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 35447.0
kafka_consumer_incoming_byte_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 34398.0
kafka_consumer_incoming_byte_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 34106.0
kafka_consumer_incoming_byte_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 34106.0
# HELP kafka_consumer_incoming_byte_rate The number of bytes read off all sockets per second
# TYPE kafka_consumer_incoming_byte_rate gauge
kafka_consumer_incoming_byte_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 51.090835010433004
kafka_consumer_incoming_byte_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 7.069791531788165
kafka_consumer_incoming_byte_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 7.06826913604571
kafka_consumer_incoming_byte_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 7.068965517241379
kafka_consumer_incoming_byte_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 7.066267804163435
# HELP kafka_consumer_io_ratio The fraction of time the I/O thread spent doing I/O
# TYPE kafka_consumer_io_ratio gauge
kafka_consumer_io_ratio{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 2.191527606757622E-4
kafka_consumer_io_ratio{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 1.1986103515505254E-4
kafka_consumer_io_ratio{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 1.1031442717780283E-4
kafka_consumer_io_ratio{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 1.0771206030150754E-4
kafka_consumer_io_ratio{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 9.7741310848571E-5
# HELP kafka_consumer_io_time_ns_total The total time the I/O thread spent doing I/O
# TYPE kafka_consumer_io_time_ns_total counter
kafka_consumer_io_time_ns_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 8.55658694E8
kafka_consumer_io_time_ns_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 4.07101896E8
kafka_consumer_io_time_ns_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 4.30389561E8
kafka_consumer_io_time_ns_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 4.31739981E8
kafka_consumer_io_time_ns_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 3.98216397E8
# HELP kafka_consumer_io_time_ns_avg The average length of time for I/O per select call in nanoseconds.
# TYPE kafka_consumer_io_time_ns_avg gauge
kafka_consumer_io_time_ns_avg{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 25032.115330520395
kafka_consumer_io_time_ns_avg{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 4666.355086372361
kafka_consumer_io_time_ns_avg{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 4607.921578677601
kafka_consumer_io_time_ns_avg{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 4122.218617771509
kafka_consumer_io_time_ns_avg{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 4064.0045918367346
# HELP kafka_consumer_io_wait_ratio The fraction of time the I/O thread spent waiting
# TYPE kafka_consumer_io_wait_ratio gauge
kafka_consumer_io_wait_ratio{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.9986125591976457
kafka_consumer_io_wait_ratio{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.9998411842137532
kafka_consumer_io_wait_ratio{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.9979973085483179
kafka_consumer_io_wait_ratio{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.998162794187942
kafka_consumer_io_wait_ratio{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.9994176009681965
# HELP kafka_consumer_io_wait_time_ns_total The total time the I/O thread spent waiting
# TYPE kafka_consumer_io_wait_time_ns_total counter
kafka_consumer_io_wait_time_ns_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 4.309228514479E12
kafka_consumer_io_wait_time_ns_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 4.308308535762E12
kafka_consumer_io_wait_time_ns_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 4.308117265814E12
kafka_consumer_io_wait_time_ns_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 4.308213450719E12
kafka_consumer_io_wait_time_ns_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 4.308467567473E12
# HELP kafka_consumer_io_wait_time_ns_avg The average length of time the I/O thread spent waiting for a socket ready for reads or writes in nanoseconds.
# TYPE kafka_consumer_io_wait_time_ns_avg gauge
kafka_consumer_io_wait_time_ns_avg{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 1.1406234113220815E8
kafka_consumer_io_wait_time_ns_avg{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 3.8945585525431864E7
kafka_consumer_io_wait_time_ns_avg{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 4.157978032034854E7
kafka_consumer_io_wait_time_ns_avg{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 3.816265427132146E7
kafka_consumer_io_wait_time_ns_avg{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 4.143575795306122E7
# HELP kafka_consumer_io_waittime_total *Deprecated* The total time the I/O thread spent waiting
# TYPE kafka_consumer_io_waittime_total counter
kafka_consumer_io_waittime_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 4.309228514479E12
kafka_consumer_io_waittime_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 4.308308535762E12
kafka_consumer_io_waittime_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 4.308117265814E12
kafka_consumer_io_waittime_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 4.308213450719E12
kafka_consumer_io_waittime_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 4.308467567473E12
# HELP kafka_consumer_iotime_total *Deprecated* The total time the I/O thread spent doing I/O
# TYPE kafka_consumer_iotime_total counter
kafka_consumer_iotime_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 8.55658694E8
kafka_consumer_iotime_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 4.07101896E8
kafka_consumer_iotime_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 4.30389561E8
kafka_consumer_iotime_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 4.31739981E8
kafka_consumer_iotime_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 3.98216397E8
# HELP kafka_consumer_last_poll_seconds_ago The number of seconds since the last poll() invocation.
# TYPE kafka_consumer_last_poll_seconds_ago gauge
kafka_consumer_last_poll_seconds_ago{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 1.0
kafka_consumer_last_poll_seconds_ago{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 1.0
kafka_consumer_last_poll_seconds_ago{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 1.0
kafka_consumer_last_poll_seconds_ago{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 1.0
kafka_consumer_last_poll_seconds_ago{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 1.0
# HELP kafka_consumer_network_io_total The total number of network operations (reads or writes) on all connections
# TYPE kafka_consumer_network_io_total counter
kafka_consumer_network_io_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 21766.0
kafka_consumer_network_io_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 4364.0
kafka_consumer_network_io_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 4368.0
kafka_consumer_network_io_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 4364.0
kafka_consumer_network_io_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 4364.0
# HELP kafka_consumer_network_io_rate The number of network operations (reads or writes) on all connections per second
# TYPE kafka_consumer_network_io_rate gauge
kafka_consumer_network_io_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 5.037472374155792
kafka_consumer_network_io_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 1.009466829166205
kafka_consumer_network_io_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 1.0097527337208156
kafka_consumer_network_io_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 1.0098397802982724
kafka_consumer_network_io_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 1.009466829166205
# HELP kafka_consumer_node_incoming_byte_total The total number of incoming bytes
# TYPE kafka_consumer_node_incoming_byte_total counter
kafka_consumer_node_incoming_byte_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 791.0
kafka_consumer_node_incoming_byte_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 192202.0
kafka_consumer_node_incoming_byte_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 31012.0
kafka_consumer_node_incoming_byte_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 499.0
kafka_consumer_node_incoming_byte_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 2700.0
kafka_consumer_node_incoming_byte_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 32248.0
kafka_consumer_node_incoming_byte_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 791.0
kafka_consumer_node_incoming_byte_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 2700.0
kafka_consumer_node_incoming_byte_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 30907.0
kafka_consumer_node_incoming_byte_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 499.0
kafka_consumer_node_incoming_byte_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 2700.0
kafka_consumer_node_incoming_byte_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 30907.0
kafka_consumer_node_incoming_byte_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 499.0
kafka_consumer_node_incoming_byte_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 2700.0
kafka_consumer_node_incoming_byte_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 30907.0
# HELP kafka_consumer_node_incoming_byte_rate The number of incoming bytes per second
# TYPE kafka_consumer_node_incoming_byte_rate gauge
kafka_consumer_node_incoming_byte_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.0
kafka_consumer_node_incoming_byte_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 44.119416554139875
kafka_consumer_node_incoming_byte_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 7.086944711953972
kafka_consumer_node_incoming_byte_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_node_incoming_byte_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_node_incoming_byte_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 7.069699990936282
kafka_consumer_node_incoming_byte_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_node_incoming_byte_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_node_incoming_byte_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 7.06818209804332
kafka_consumer_node_incoming_byte_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_node_incoming_byte_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_node_incoming_byte_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 7.0688784620879055
kafka_consumer_node_incoming_byte_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
kafka_consumer_node_incoming_byte_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
kafka_consumer_node_incoming_byte_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 7.06618081544219
# HELP kafka_consumer_node_outgoing_byte_total The total number of outgoing bytes
# TYPE kafka_consumer_node_outgoing_byte_total counter
kafka_consumer_node_outgoing_byte_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 400.0
kafka_consumer_node_outgoing_byte_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 612976.0
kafka_consumer_node_outgoing_byte_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 339401.0
kafka_consumer_node_outgoing_byte_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 298.0
kafka_consumer_node_outgoing_byte_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 1572.0
kafka_consumer_node_outgoing_byte_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 340335.0
kafka_consumer_node_outgoing_byte_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 400.0
kafka_consumer_node_outgoing_byte_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 1572.0
kafka_consumer_node_outgoing_byte_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 339502.0
kafka_consumer_node_outgoing_byte_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 298.0
kafka_consumer_node_outgoing_byte_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 1572.0
kafka_consumer_node_outgoing_byte_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 339502.0
kafka_consumer_node_outgoing_byte_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 298.0
kafka_consumer_node_outgoing_byte_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 1572.0
kafka_consumer_node_outgoing_byte_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 339502.0
# HELP kafka_consumer_node_outgoing_byte_rate The number of outgoing bytes per second
# TYPE kafka_consumer_node_outgoing_byte_rate gauge
kafka_consumer_node_outgoing_byte_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.0
kafka_consumer_node_outgoing_byte_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 142.3834861894703
kafka_consumer_node_outgoing_byte_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 79.47404160750663
kafka_consumer_node_outgoing_byte_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_node_outgoing_byte_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_node_outgoing_byte_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 79.24021961247755
kafka_consumer_node_outgoing_byte_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_node_outgoing_byte_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_node_outgoing_byte_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 79.26266146211721
kafka_consumer_node_outgoing_byte_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_node_outgoing_byte_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_node_outgoing_byte_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 79.27047030282132
kafka_consumer_node_outgoing_byte_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
kafka_consumer_node_outgoing_byte_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
kafka_consumer_node_outgoing_byte_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 79.24119508081691
# HELP kafka_consumer_node_request_total The total number of requests sent
# TYPE kafka_consumer_node_request_total counter
kafka_consumer_node_request_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 6.0
kafka_consumer_node_request_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 8626.0
kafka_consumer_node_request_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 2162.0
kafka_consumer_node_request_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 4.0
kafka_consumer_node_request_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 16.0
kafka_consumer_node_request_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 2162.0
kafka_consumer_node_request_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 6.0
kafka_consumer_node_request_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 16.0
kafka_consumer_node_request_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 2162.0
kafka_consumer_node_request_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 4.0
kafka_consumer_node_request_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 16.0
kafka_consumer_node_request_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 2162.0
kafka_consumer_node_request_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 4.0
kafka_consumer_node_request_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 16.0
kafka_consumer_node_request_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 2162.0
# TYPE kafka_consumer_node_request_latency_avg gauge
kafka_consumer_node_request_latency_avg{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} NaN
kafka_consumer_node_request_latency_avg{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} NaN
kafka_consumer_node_request_latency_avg{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} NaN
kafka_consumer_node_request_latency_avg{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_node_request_latency_avg{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_node_request_latency_avg{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_node_request_latency_avg{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_node_request_latency_avg{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_node_request_latency_avg{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_node_request_latency_avg{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_node_request_latency_avg{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_node_request_latency_avg{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_node_request_latency_avg{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
kafka_consumer_node_request_latency_avg{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
kafka_consumer_node_request_latency_avg{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
# TYPE kafka_consumer_node_request_latency_max gauge
kafka_consumer_node_request_latency_max{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} NaN
kafka_consumer_node_request_latency_max{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} NaN
kafka_consumer_node_request_latency_max{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} NaN
kafka_consumer_node_request_latency_max{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_node_request_latency_max{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_node_request_latency_max{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_node_request_latency_max{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_node_request_latency_max{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_node_request_latency_max{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_node_request_latency_max{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_node_request_latency_max{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_node_request_latency_max{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_node_request_latency_max{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
kafka_consumer_node_request_latency_max{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
kafka_consumer_node_request_latency_max{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
# HELP kafka_consumer_node_request_rate The number of requests sent per second
# TYPE kafka_consumer_node_request_rate gauge
kafka_consumer_node_request_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.0
kafka_consumer_node_request_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 2.005428025188176
kafka_consumer_node_request_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.5062103365681409
kafka_consumer_node_request_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_node_request_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_node_request_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.5047209877759039
kafka_consumer_node_request_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_node_request_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_node_request_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.5048639330131758
kafka_consumer_node_request_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_node_request_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_node_request_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.5049136720770424
kafka_consumer_node_request_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
kafka_consumer_node_request_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
kafka_consumer_node_request_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.5047272011030136
# HELP kafka_consumer_node_request_size_avg The average size of requests sent.
# TYPE kafka_consumer_node_request_size_avg gauge
kafka_consumer_node_request_size_avg{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} NaN
kafka_consumer_node_request_size_avg{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 71.0
kafka_consumer_node_request_size_avg{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 157.0
kafka_consumer_node_request_size_avg{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_node_request_size_avg{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_node_request_size_avg{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 157.0
kafka_consumer_node_request_size_avg{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_node_request_size_avg{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_node_request_size_avg{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 157.0
kafka_consumer_node_request_size_avg{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_node_request_size_avg{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_node_request_size_avg{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 157.0
kafka_consumer_node_request_size_avg{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
kafka_consumer_node_request_size_avg{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
kafka_consumer_node_request_size_avg{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 157.0
# HELP kafka_consumer_node_request_size_max The maximum size of any request sent.
# TYPE kafka_consumer_node_request_size_max gauge
kafka_consumer_node_request_size_max{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} NaN
kafka_consumer_node_request_size_max{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 71.0
kafka_consumer_node_request_size_max{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 157.0
kafka_consumer_node_request_size_max{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_node_request_size_max{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_node_request_size_max{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 157.0
kafka_consumer_node_request_size_max{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_node_request_size_max{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_node_request_size_max{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 157.0
kafka_consumer_node_request_size_max{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_node_request_size_max{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_node_request_size_max{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 157.0
kafka_consumer_node_request_size_max{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
kafka_consumer_node_request_size_max{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
kafka_consumer_node_request_size_max{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 157.0
# HELP kafka_consumer_node_response_total The total number of responses received
# TYPE kafka_consumer_node_response_total counter
kafka_consumer_node_response_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 6.0
kafka_consumer_node_response_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 8625.0
kafka_consumer_node_response_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 2162.0
kafka_consumer_node_response_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 4.0
kafka_consumer_node_response_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 16.0
kafka_consumer_node_response_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 2162.0
kafka_consumer_node_response_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 6.0
kafka_consumer_node_response_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 16.0
kafka_consumer_node_response_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 2162.0
kafka_consumer_node_response_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 4.0
kafka_consumer_node_response_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 16.0
kafka_consumer_node_response_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 2162.0
kafka_consumer_node_response_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 4.0
kafka_consumer_node_response_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 16.0
kafka_consumer_node_response_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 2162.0
# HELP kafka_consumer_node_response_rate The number of responses received per second
# TYPE kafka_consumer_node_response_rate gauge
kafka_consumer_node_response_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.0
kafka_consumer_node_response_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 2.0054012139362016
kafka_consumer_node_response_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.5062040866720168
kafka_consumer_node_response_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_node_response_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_node_response_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.5049720323182101
kafka_consumer_node_response_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_node_response_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_node_response_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.5048639330131758
kafka_consumer_node_response_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_node_response_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_node_response_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.5049136720770424
kafka_consumer_node_response_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node--1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
kafka_consumer_node_response_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node-1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
kafka_consumer_node_response_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",node_id="node-2147483646",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.5047209877759039
# HELP kafka_consumer_outgoing_byte_total The total number of outgoing bytes sent to all servers
# TYPE kafka_consumer_outgoing_byte_total counter
kafka_consumer_outgoing_byte_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 952777.0
kafka_consumer_outgoing_byte_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 342205.0
kafka_consumer_outgoing_byte_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 341474.0
kafka_consumer_outgoing_byte_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 341372.0
kafka_consumer_outgoing_byte_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 341372.0
# HELP kafka_consumer_outgoing_byte_rate The number of outgoing bytes sent to all servers per second
# TYPE kafka_consumer_outgoing_byte_rate gauge
kafka_consumer_outgoing_byte_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 221.49101145792176
kafka_consumer_outgoing_byte_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 79.2431460895471
kafka_consumer_outgoing_byte_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 79.26558959708403
kafka_consumer_outgoing_byte_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 79.27339901477832
kafka_consumer_outgoing_byte_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 79.24412162993967
# HELP kafka_consumer_poll_idle_ratio_avg The average fraction of time the consumer's poll() is idle as opposed to waiting for the user code to process records.
# TYPE kafka_consumer_poll_idle_ratio_avg gauge
kafka_consumer_poll_idle_ratio_avg{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.5
kafka_consumer_poll_idle_ratio_avg{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.5
kafka_consumer_poll_idle_ratio_avg{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.4999968753124687
kafka_consumer_poll_idle_ratio_avg{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.5
kafka_consumer_poll_idle_ratio_avg{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.5
# HELP kafka_consumer_reauthentication_latency_avg The average latency observed due to re-authentication
# TYPE kafka_consumer_reauthentication_latency_avg gauge
kafka_consumer_reauthentication_latency_avg{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} NaN
kafka_consumer_reauthentication_latency_avg{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_reauthentication_latency_avg{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_reauthentication_latency_avg{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_reauthentication_latency_avg{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
# HELP kafka_consumer_reauthentication_latency_max The max latency observed due to re-authentication
# TYPE kafka_consumer_reauthentication_latency_max gauge
kafka_consumer_reauthentication_latency_max{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} NaN
kafka_consumer_reauthentication_latency_max{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} NaN
kafka_consumer_reauthentication_latency_max{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} NaN
kafka_consumer_reauthentication_latency_max{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} NaN
kafka_consumer_reauthentication_latency_max{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} NaN
# HELP kafka_consumer_request_total The total number of requests sent
# TYPE kafka_consumer_request_total counter
kafka_consumer_request_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 10794.0
kafka_consumer_request_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 2182.0
kafka_consumer_request_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 2184.0
kafka_consumer_request_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 2182.0
kafka_consumer_request_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 2182.0
# HELP kafka_consumer_request_rate The number of requests sent per second
# TYPE kafka_consumer_request_rate gauge
kafka_consumer_request_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 2.506389441062808
kafka_consumer_request_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.5047272011030136
kafka_consumer_request_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.5048701498602371
kafka_consumer_request_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.5049198901491362
kafka_consumer_request_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.5047334145831025
# HELP kafka_consumer_request_size_avg The average size of requests sent.
# TYPE kafka_consumer_request_size_avg gauge
kafka_consumer_request_size_avg{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 88.36945812807882
kafka_consumer_request_size_avg{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 157.0
kafka_consumer_request_size_avg{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 157.0
kafka_consumer_request_size_avg{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 157.0
kafka_consumer_request_size_avg{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 157.0
# HELP kafka_consumer_request_size_max The maximum size of any request sent.
# TYPE kafka_consumer_request_size_max gauge
kafka_consumer_request_size_max{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 157.0
kafka_consumer_request_size_max{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 157.0
kafka_consumer_request_size_max{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 157.0
kafka_consumer_request_size_max{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 157.0
kafka_consumer_request_size_max{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 157.0
# HELP kafka_consumer_response_total The total number of responses received
# TYPE kafka_consumer_response_total counter
kafka_consumer_response_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 10793.0
kafka_consumer_response_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 2182.0
kafka_consumer_response_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 2184.0
kafka_consumer_response_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 2182.0
kafka_consumer_response_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 2182.0
# HELP kafka_consumer_response_rate The number of responses received per second
# TYPE kafka_consumer_response_rate gauge
kafka_consumer_response_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 2.5064203871987356
kafka_consumer_response_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.5049916482150487
kafka_consumer_response_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.5048825840136935
kafka_consumer_response_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.5049323267527925
kafka_consumer_response_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.5047396282161762
# HELP kafka_consumer_select_total The total number of times the I/O layer checked for new I/O to perform
# TYPE kafka_consumer_select_total counter
kafka_consumer_select_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 42938.0
kafka_consumer_select_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 102684.0
kafka_consumer_select_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 104321.0
kafka_consumer_select_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 104010.0
kafka_consumer_select_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 104337.0
# HELP kafka_consumer_select_rate The number of times the I/O layer checked for new I/O to perform per second
# TYPE kafka_consumer_select_rate gauge
kafka_consumer_select_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 8.754971617145461
kafka_consumer_select_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 25.652344516382183
kafka_consumer_select_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 23.996568417182427
kafka_consumer_select_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 26.155486646484206
kafka_consumer_select_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 24.10686929346161
# HELP kafka_consumer_successful_authentication_total The total number of connections with successful authentication
# TYPE kafka_consumer_successful_authentication_total counter
kafka_consumer_successful_authentication_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.0
kafka_consumer_successful_authentication_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_successful_authentication_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_successful_authentication_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_successful_authentication_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
# HELP kafka_consumer_successful_authentication_no_reauth_total The total number of connections with successful authentication where the client does not support re-authentication
# TYPE kafka_consumer_successful_authentication_no_reauth_total counter
kafka_consumer_successful_authentication_no_reauth_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.0
kafka_consumer_successful_authentication_no_reauth_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_successful_authentication_no_reauth_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_successful_authentication_no_reauth_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_successful_authentication_no_reauth_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
# HELP kafka_consumer_successful_authentication_rate The number of connections with successful authentication per second
# TYPE kafka_consumer_successful_authentication_rate gauge
kafka_consumer_successful_authentication_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.0
kafka_consumer_successful_authentication_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_successful_authentication_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_successful_authentication_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_successful_authentication_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
# HELP kafka_consumer_successful_reauthentication_total The total number of successful re-authentication of connections
# TYPE kafka_consumer_successful_reauthentication_total counter
kafka_consumer_successful_reauthentication_total{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.0
kafka_consumer_successful_reauthentication_total{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_successful_reauthentication_total{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_successful_reauthentication_total{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_successful_reauthentication_total{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
# HELP kafka_consumer_successful_reauthentication_rate The number of successful re-authentication of connections per second
# TYPE kafka_consumer_successful_reauthentication_rate gauge
kafka_consumer_successful_reauthentication_rate{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 0.0
kafka_consumer_successful_reauthentication_rate{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 0.0
kafka_consumer_successful_reauthentication_rate{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 0.0
kafka_consumer_successful_reauthentication_rate{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 0.0
kafka_consumer_successful_reauthentication_rate{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 0.0
# HELP kafka_consumer_time_between_poll_avg The average delay between invocations of poll() in milliseconds.
# TYPE kafka_consumer_time_between_poll_avg gauge
kafka_consumer_time_between_poll_avg{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 5000.058823529412
kafka_consumer_time_between_poll_avg{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 5000.176470588235
kafka_consumer_time_between_poll_avg{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 5000.235294117647
kafka_consumer_time_between_poll_avg{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 5000.058823529412
kafka_consumer_time_between_poll_avg{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 5000.058823529412
# HELP kafka_consumer_time_between_poll_max The max delay between invocations of poll() in milliseconds.
# TYPE kafka_consumer_time_between_poll_max gauge
kafka_consumer_time_between_poll_max{client_id="cobrancaBancariaClient-0",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-0"} 5001.0
kafka_consumer_time_between_poll_max{client_id="cobrancaBancariaClient-1",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-1"} 5001.0
kafka_consumer_time_between_poll_max{client_id="cobrancaBancariaClient-2",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-2"} 5001.0
kafka_consumer_time_between_poll_max{client_id="cobrancaBancariaClient-3",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-3"} 5001.0
kafka_consumer_time_between_poll_max{client_id="cobrancaBancariaClient-4",kafka_version="3.8.1",spring_id="kafkaConsumerFactory.cobrancaBancariaClient-4"} 5001.0
# HELP logback_events_total Number of log events that were enabled by the effective log level
# TYPE logback_events_total counter
logback_events_total{level="debug"} 0.0
logback_events_total{level="error"} 5.0
logback_events_total{level="info"} 1448.0
logback_events_total{level="trace"} 0.0
logback_events_total{level="warn"} 19.0
# HELP process_cpu_time_ns_total The "cpu time" used by the Java Virtual Machine process
# TYPE process_cpu_time_ns_total counter
process_cpu_time_ns_total 4.5547E11
# HELP process_cpu_usage The "recent cpu usage" for the Java Virtual Machine process
# TYPE process_cpu_usage gauge
process_cpu_usage 0.011695040710584753
# HELP process_files_max_files The maximum file descriptor count
# TYPE process_files_max_files gauge
process_files_max_files 1048576.0
# HELP process_files_open_files The open file descriptor count
# TYPE process_files_open_files gauge
process_files_open_files 836.0
# HELP process_start_time_seconds Start time of the process since unix epoch.
# TYPE process_start_time_seconds gauge
process_start_time_seconds 1.759512769722E9
# HELP process_uptime_seconds The uptime of the Java virtual machine
# TYPE process_uptime_seconds gauge
process_uptime_seconds 4348.373
# HELP rabbitmq_acknowledged_total  
# TYPE rabbitmq_acknowledged_total counter
rabbitmq_acknowledged_total{name="connectionFactory"} 0.0
# HELP rabbitmq_acknowledged_published_total  
# TYPE rabbitmq_acknowledged_published_total counter
rabbitmq_acknowledged_published_total{name="connectionFactory"} 0.0
# HELP rabbitmq_channels  
# TYPE rabbitmq_channels gauge
rabbitmq_channels{name="connectionFactory"} 0.0
# HELP rabbitmq_connections  
# TYPE rabbitmq_connections gauge
rabbitmq_connections{name="connectionFactory"} 0.0
# HELP rabbitmq_consumed_total  
# TYPE rabbitmq_consumed_total counter
rabbitmq_consumed_total{name="connectionFactory"} 0.0
# HELP rabbitmq_failed_to_publish_total  
# TYPE rabbitmq_failed_to_publish_total counter
rabbitmq_failed_to_publish_total{name="connectionFactory"} 0.0
# HELP rabbitmq_not_acknowledged_published_total  
# TYPE rabbitmq_not_acknowledged_published_total counter
rabbitmq_not_acknowledged_published_total{name="connectionFactory"} 0.0
# HELP rabbitmq_published_total  
# TYPE rabbitmq_published_total counter
rabbitmq_published_total{name="connectionFactory"} 0.0
# HELP rabbitmq_rejected_total  
# TYPE rabbitmq_rejected_total counter
rabbitmq_rejected_total{name="connectionFactory"} 0.0
# HELP rabbitmq_unrouted_published_total  
# TYPE rabbitmq_unrouted_published_total counter
rabbitmq_unrouted_published_total{name="connectionFactory"} 0.0
# HELP spring_batch_job_launch_count_total Job launch count
# TYPE spring_batch_job_launch_count_total counter
spring_batch_job_launch_count_total 0.0
# HELP spring_data_repository_invocations_seconds Duration of repository invocations
# TYPE spring_data_repository_invocations_seconds summary
spring_data_repository_invocations_seconds_count{exception="None",method="buscaListaEventoParaRetentativa",repository="DispatcherErrorRepository",state="SUCCESS"} 2
spring_data_repository_invocations_seconds_sum{exception="None",method="buscaListaEventoParaRetentativa",repository="DispatcherErrorRepository",state="SUCCESS"} 0.07642797
spring_data_repository_invocations_seconds_count{exception="None",method="findAll",repository="BcConfiguracaoRepository",state="SUCCESS"} 3
spring_data_repository_invocations_seconds_sum{exception="None",method="findAll",repository="BcConfiguracaoRepository",state="SUCCESS"} 0.013005847
spring_data_repository_invocations_seconds_count{exception="None",method="findAll",repository="ConfiguracaoRepository",state="SUCCESS"} 3
spring_data_repository_invocations_seconds_sum{exception="None",method="findAll",repository="ConfiguracaoRepository",state="SUCCESS"} 0.013350645
spring_data_repository_invocations_seconds_count{exception="None",method="findById",repository="BcSubSistemaRepository",state="SUCCESS"} 3
spring_data_repository_invocations_seconds_sum{exception="None",method="findById",repository="BcSubSistemaRepository",state="SUCCESS"} 0.005996195
spring_data_repository_invocations_seconds_count{exception="None",method="findById",repository="EventoRepository",state="SUCCESS"} 3
spring_data_repository_invocations_seconds_sum{exception="None",method="findById",repository="EventoRepository",state="SUCCESS"} 0.007864689
spring_data_repository_invocations_seconds_count{exception="None",method="findById",repository="TituloRepository",state="SUCCESS"} 6
spring_data_repository_invocations_seconds_sum{exception="None",method="findById",repository="TituloRepository",state="SUCCESS"} 0.073099032
spring_data_repository_invocations_seconds_count{exception="None",method="findByIdCacheable",repository="CarteiraCedenteRepository",state="SUCCESS"} 3
spring_data_repository_invocations_seconds_sum{exception="None",method="findByIdCacheable",repository="CarteiraCedenteRepository",state="SUCCESS"} 0.021022974
spring_data_repository_invocations_seconds_count{exception="None",method="findByIdTipoIndexador",repository="BcTipoIndexadorRepository",state="SUCCESS"} 3
spring_data_repository_invocations_seconds_sum{exception="None",method="findByIdTipoIndexador",repository="BcTipoIndexadorRepository",state="SUCCESS"} 0.010072465
spring_data_repository_invocations_seconds_count{exception="None",method="findByIndexadorAndData",repository="BcIndexadorRepository",state="SUCCESS"} 3
spring_data_repository_invocations_seconds_sum{exception="None",method="findByIndexadorAndData",repository="BcIndexadorRepository",state="SUCCESS"} 0.027007309
spring_data_repository_invocations_seconds_count{exception="None",method="findByNomeProcesso",repository="CobSemaforoRepository",state="SUCCESS"} 1
spring_data_repository_invocations_seconds_sum{exception="None",method="findByNomeProcesso",repository="CobSemaforoRepository",state="SUCCESS"} 0.110466656
spring_data_repository_invocations_seconds_count{exception="None",method="findOneByTitulo",repository="VCobTituloEmitenteRepository",state="SUCCESS"} 3
spring_data_repository_invocations_seconds_sum{exception="None",method="findOneByTitulo",repository="VCobTituloEmitenteRepository",state="SUCCESS"} 0.013661075
spring_data_repository_invocations_seconds_count{exception="None",method="save",repository="RequisicaoCipMsgRepository",state="SUCCESS"} 3
spring_data_repository_invocations_seconds_sum{exception="None",method="save",repository="RequisicaoCipMsgRepository",state="SUCCESS"} 0.013668632
spring_data_repository_invocations_seconds_count{exception="None",method="saveAndFlush",repository="CobAuditoriaAcessoServicosRepository",state="SUCCESS"} 4
spring_data_repository_invocations_seconds_sum{exception="None",method="saveAndFlush",repository="CobAuditoriaAcessoServicosRepository",state="SUCCESS"} 0.061342386
# HELP spring_data_repository_invocations_seconds_max Duration of repository invocations
# TYPE spring_data_repository_invocations_seconds_max gauge
spring_data_repository_invocations_seconds_max{exception="None",method="buscaListaEventoParaRetentativa",repository="DispatcherErrorRepository",state="SUCCESS"} 0.0
spring_data_repository_invocations_seconds_max{exception="None",method="findAll",repository="BcConfiguracaoRepository",state="SUCCESS"} 0.0
spring_data_repository_invocations_seconds_max{exception="None",method="findAll",repository="ConfiguracaoRepository",state="SUCCESS"} 0.0
spring_data_repository_invocations_seconds_max{exception="None",method="findById",repository="BcSubSistemaRepository",state="SUCCESS"} 0.0
spring_data_repository_invocations_seconds_max{exception="None",method="findById",repository="EventoRepository",state="SUCCESS"} 0.0
spring_data_repository_invocations_seconds_max{exception="None",method="findById",repository="TituloRepository",state="SUCCESS"} 0.0
spring_data_repository_invocations_seconds_max{exception="None",method="findByIdCacheable",repository="CarteiraCedenteRepository",state="SUCCESS"} 0.0
spring_data_repository_invocations_seconds_max{exception="None",method="findByIdTipoIndexador",repository="BcTipoIndexadorRepository",state="SUCCESS"} 0.0
spring_data_repository_invocations_seconds_max{exception="None",method="findByIndexadorAndData",repository="BcIndexadorRepository",state="SUCCESS"} 0.0
spring_data_repository_invocations_seconds_max{exception="None",method="findByNomeProcesso",repository="CobSemaforoRepository",state="SUCCESS"} 0.0
spring_data_repository_invocations_seconds_max{exception="None",method="findOneByTitulo",repository="VCobTituloEmitenteRepository",state="SUCCESS"} 0.0
spring_data_repository_invocations_seconds_max{exception="None",method="save",repository="RequisicaoCipMsgRepository",state="SUCCESS"} 0.0
spring_data_repository_invocations_seconds_max{exception="None",method="saveAndFlush",repository="CobAuditoriaAcessoServicosRepository",state="SUCCESS"} 0.0
# HELP spring_kafka_listener_seconds Kafka Listener Timer
# TYPE spring_kafka_listener_seconds summary
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-accountDeactivation-0",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-accountDeactivation-0",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-accountDeactivation-1",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-accountDeactivation-1",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-accountDeactivation-2",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-accountDeactivation-2",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-accountDeactivation-3",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-accountDeactivation-3",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-accountDeactivation-4",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-accountDeactivation-4",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-accountDeactivation-sdcobr-dlt-0",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-accountDeactivation-sdcobr-dlt-0",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-accountDeactivation-sdcobr-dlt-1",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-accountDeactivation-sdcobr-dlt-1",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-accountDeactivation-sdcobr-dlt-2",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-accountDeactivation-sdcobr-dlt-2",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-accountDeactivation-sdcobr-dlt-3",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-accountDeactivation-sdcobr-dlt-3",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-accountDeactivation-sdcobr-dlt-4",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-accountDeactivation-sdcobr-dlt-4",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-0-0",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-0-0",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-0-1",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-0-1",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-0-2",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-0-2",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-0-3",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-0-3",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-0-4",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-0-4",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-1-0",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-1-0",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-1-1",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-1-1",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-1-2",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-1-2",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-1-3",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-1-3",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-1-4",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-1-4",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPayments-0",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPayments-0",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPayments-1",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPayments-1",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPayments-2",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPayments-2",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPayments-3",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPayments-3",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPayments-4",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPayments-4",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-dlt-0",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-dlt-0",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-dlt-1",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-dlt-1",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-dlt-2",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-dlt-2",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-dlt-3",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-dlt-3",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-dlt-4",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-dlt-4",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-0-0",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-0-0",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-0-1",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-0-1",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-0-2",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-0-2",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-0-3",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-0-3",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-0-4",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-0-4",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-1-0",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-1-0",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-1-1",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-1-1",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-1-2",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-1-2",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-1-3",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-1-3",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-1-4",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-1-4",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-0",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-0",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-1",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-1",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-2",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-2",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-3",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-3",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-4",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-4",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-dlt-0",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-dlt-0",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-dlt-1",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-dlt-1",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-dlt-2",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-dlt-2",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-dlt-3",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-dlt-3",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-dlt-4",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-dlt-4",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-0-0",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-0-0",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-0-1",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-0-1",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-0-2",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-0-2",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-0-3",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-0-3",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-0-4",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-0-4",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-1-0",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-1-0",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-1-1",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-1-1",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-1-2",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-1-2",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-1-3",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-1-3",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-1-4",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-1-4",result="success"} 0.0
# HELP spring_kafka_listener_seconds_max Kafka Listener Timer
# TYPE spring_kafka_listener_seconds_max gauge
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-accountDeactivation-0",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-accountDeactivation-1",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-accountDeactivation-2",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-accountDeactivation-3",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-accountDeactivation-4",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-accountDeactivation-sdcobr-dlt-0",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-accountDeactivation-sdcobr-dlt-1",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-accountDeactivation-sdcobr-dlt-2",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-accountDeactivation-sdcobr-dlt-3",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-accountDeactivation-sdcobr-dlt-4",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-0-0",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-0-1",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-0-2",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-0-3",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-0-4",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-1-0",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-1-1",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-1-2",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-1-3",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-accountDeactivation-sdcobr-retry-1-4",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPayments-0",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPayments-1",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPayments-2",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPayments-3",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPayments-4",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-dlt-0",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-dlt-1",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-dlt-2",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-dlt-3",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-dlt-4",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-0-0",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-0-1",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-0-2",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-0-3",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-0-4",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-1-0",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-1-1",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-1-2",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-1-3",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPayments-sdcobr-retry-1-4",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-0",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-1",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-2",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-3",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-4",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-dlt-0",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-dlt-1",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-dlt-2",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-dlt-3",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-dlt-4",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-0-0",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-0-1",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-0-2",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-0-3",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-0-4",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-1-0",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-1-1",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-1-2",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-1-3",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="sdcobr-writeoffInstantPaymentsDebit-sdcobr-retry-1-4",result="success"} 0.0
# HELP spring_kafka_template_seconds KafkaTemplate Timer
# TYPE spring_kafka_template_seconds summary
spring_kafka_template_seconds_count{exception="none",name="kafkaTemplate",result="success"} 0
spring_kafka_template_seconds_sum{exception="none",name="kafkaTemplate",result="success"} 0.0
# HELP spring_kafka_template_seconds_max KafkaTemplate Timer
# TYPE spring_kafka_template_seconds_max gauge
spring_kafka_template_seconds_max{exception="none",name="kafkaTemplate",result="success"} 0.0
# HELP spring_security_authorizations_active_seconds  
# TYPE spring_security_authorizations_active_seconds summary
spring_security_authorizations_active_seconds_count{spring_security_authentication_type="n/a",spring_security_authorization_decision="unknown",spring_security_object="method"} 0
spring_security_authorizations_active_seconds_sum{spring_security_authentication_type="n/a",spring_security_authorization_decision="unknown",spring_security_object="method"} 0.0
spring_security_authorizations_active_seconds_count{spring_security_authentication_type="n/a",spring_security_authorization_decision="unknown",spring_security_object="request"} 0
spring_security_authorizations_active_seconds_sum{spring_security_authentication_type="n/a",spring_security_authorization_decision="unknown",spring_security_object="request"} 0.0
# HELP spring_security_authorizations_active_seconds_max  
# TYPE spring_security_authorizations_active_seconds_max gauge
spring_security_authorizations_active_seconds_max{spring_security_authentication_type="n/a",spring_security_authorization_decision="unknown",spring_security_object="method"} 0.0
spring_security_authorizations_active_seconds_max{spring_security_authentication_type="n/a",spring_security_authorization_decision="unknown",spring_security_object="request"} 0.0
# HELP spring_security_authorizations_seconds  
# TYPE spring_security_authorizations_seconds summary
spring_security_authorizations_seconds_count{error="AccessDeniedException",spring_security_authentication_type="n/a",spring_security_authorization_decision="false",spring_security_object="request"} 6
spring_security_authorizations_seconds_sum{error="AccessDeniedException",spring_security_authentication_type="n/a",spring_security_authorization_decision="false",spring_security_object="request"} 0.00937141
spring_security_authorizations_seconds_count{error="none",spring_security_authentication_type="BearerTokenAuthentication",spring_security_authorization_decision="true",spring_security_object="method"} 4
spring_security_authorizations_seconds_sum{error="none",spring_security_authentication_type="BearerTokenAuthentication",spring_security_authorization_decision="true",spring_security_object="method"} 0.010201067
spring_security_authorizations_seconds_count{error="none",spring_security_authentication_type="BearerTokenAuthentication",spring_security_authorization_decision="true",spring_security_object="request"} 4
spring_security_authorizations_seconds_sum{error="none",spring_security_authentication_type="BearerTokenAuthentication",spring_security_authorization_decision="true",spring_security_object="request"} 5.55352E-4
spring_security_authorizations_seconds_count{error="none",spring_security_authentication_type="n/a",spring_security_authorization_decision="true",spring_security_object="request"} 40
spring_security_authorizations_seconds_sum{error="none",spring_security_authentication_type="n/a",spring_security_authorization_decision="true",spring_security_object="request"} 0.008866859
# HELP spring_security_authorizations_seconds_max  
# TYPE spring_security_authorizations_seconds_max gauge
spring_security_authorizations_seconds_max{error="AccessDeniedException",spring_security_authentication_type="n/a",spring_security_authorization_decision="false",spring_security_object="request"} 2.29581E-4
spring_security_authorizations_seconds_max{error="none",spring_security_authentication_type="BearerTokenAuthentication",spring_security_authorization_decision="true",spring_security_object="method"} 0.0
spring_security_authorizations_seconds_max{error="none",spring_security_authentication_type="BearerTokenAuthentication",spring_security_authorization_decision="true",spring_security_object="request"} 0.0
spring_security_authorizations_seconds_max{error="none",spring_security_authentication_type="n/a",spring_security_authorization_decision="true",spring_security_object="request"} 1.00309E-4
# HELP spring_security_filterchains_access_exceptions_after_total  
# TYPE spring_security_filterchains_access_exceptions_after_total counter
spring_security_filterchains_access_exceptions_after_total{security_security_reached_filter_section="after",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 188.0
# HELP spring_security_filterchains_access_exceptions_before_total  
# TYPE spring_security_filterchains_access_exceptions_before_total counter
spring_security_filterchains_access_exceptions_before_total{security_security_reached_filter_section="before",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 189.0
# HELP spring_security_filterchains_active_seconds  
# TYPE spring_security_filterchains_active_seconds summary
spring_security_filterchains_active_seconds_count{security_security_reached_filter_section="after",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 0
spring_security_filterchains_active_seconds_sum{security_security_reached_filter_section="after",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 0.0
spring_security_filterchains_active_seconds_count{security_security_reached_filter_section="before",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 0
spring_security_filterchains_active_seconds_sum{security_security_reached_filter_section="before",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 0.0
# HELP spring_security_filterchains_active_seconds_max  
# TYPE spring_security_filterchains_active_seconds_max gauge
spring_security_filterchains_active_seconds_max{security_security_reached_filter_section="after",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 0.0
spring_security_filterchains_active_seconds_max{security_security_reached_filter_section="before",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 0.0
# HELP spring_security_filterchains_authentication_anonymous_after_total  
# TYPE spring_security_filterchains_authentication_anonymous_after_total counter
spring_security_filterchains_authentication_anonymous_after_total{security_security_reached_filter_section="after",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 188.0
# HELP spring_security_filterchains_authentication_anonymous_before_total  
# TYPE spring_security_filterchains_authentication_anonymous_before_total counter
spring_security_filterchains_authentication_anonymous_before_total{security_security_reached_filter_section="before",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 189.0
# HELP spring_security_filterchains_authentication_bearer_after_total  
# TYPE spring_security_filterchains_authentication_bearer_after_total counter
spring_security_filterchains_authentication_bearer_after_total{security_security_reached_filter_section="after",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 4.0
# HELP spring_security_filterchains_authentication_bearer_before_total  
# TYPE spring_security_filterchains_authentication_bearer_before_total counter
spring_security_filterchains_authentication_bearer_before_total{security_security_reached_filter_section="before",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 4.0
# HELP spring_security_filterchains_authorization_after_total  
# TYPE spring_security_filterchains_authorization_after_total counter
spring_security_filterchains_authorization_after_total{security_security_reached_filter_section="after",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 44.0
# HELP spring_security_filterchains_authorization_before_total  
# TYPE spring_security_filterchains_authorization_before_total counter
spring_security_filterchains_authorization_before_total{security_security_reached_filter_section="before",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 50.0
# HELP spring_security_filterchains_context_async_after_total  
# TYPE spring_security_filterchains_context_async_after_total counter
spring_security_filterchains_context_async_after_total{security_security_reached_filter_section="after",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 188.0
# HELP spring_security_filterchains_context_async_before_total  
# TYPE spring_security_filterchains_context_async_before_total counter
spring_security_filterchains_context_async_before_total{security_security_reached_filter_section="before",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 189.0
# HELP spring_security_filterchains_context_holder_after_total  
# TYPE spring_security_filterchains_context_holder_after_total counter
spring_security_filterchains_context_holder_after_total{security_security_reached_filter_section="after",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 188.0
# HELP spring_security_filterchains_context_holder_before_total  
# TYPE spring_security_filterchains_context_holder_before_total counter
spring_security_filterchains_context_holder_before_total{security_security_reached_filter_section="before",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 189.0
# HELP spring_security_filterchains_context_servlet_after_total  
# TYPE spring_security_filterchains_context_servlet_after_total counter
spring_security_filterchains_context_servlet_after_total{security_security_reached_filter_section="after",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 188.0
# HELP spring_security_filterchains_context_servlet_before_total  
# TYPE spring_security_filterchains_context_servlet_before_total counter
spring_security_filterchains_context_servlet_before_total{security_security_reached_filter_section="before",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 189.0
# HELP spring_security_filterchains_header_after_total  
# TYPE spring_security_filterchains_header_after_total counter
spring_security_filterchains_header_after_total{security_security_reached_filter_section="after",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 188.0
# HELP spring_security_filterchains_header_before_total  
# TYPE spring_security_filterchains_header_before_total counter
spring_security_filterchains_header_before_total{security_security_reached_filter_section="before",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 189.0
# HELP spring_security_filterchains_logout_after_total  
# TYPE spring_security_filterchains_logout_after_total counter
spring_security_filterchains_logout_after_total{security_security_reached_filter_section="after",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 188.0
# HELP spring_security_filterchains_logout_before_total  
# TYPE spring_security_filterchains_logout_before_total counter
spring_security_filterchains_logout_before_total{security_security_reached_filter_section="before",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 189.0
# HELP spring_security_filterchains_requestcache_after_total  
# TYPE spring_security_filterchains_requestcache_after_total counter
spring_security_filterchains_requestcache_after_total{security_security_reached_filter_section="after",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 188.0
# HELP spring_security_filterchains_requestcache_before_total  
# TYPE spring_security_filterchains_requestcache_before_total counter
spring_security_filterchains_requestcache_before_total{security_security_reached_filter_section="before",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 189.0
# HELP spring_security_filterchains_seconds  
# TYPE spring_security_filterchains_seconds summary
spring_security_filterchains_seconds_count{error="none",security_security_reached_filter_section="after",spring_security_filterchain_position="10",spring_security_filterchain_size="10",spring_security_reached_filter_name="DisableEncodeUrlFilter"} 138
spring_security_filterchains_seconds_sum{error="none",security_security_reached_filter_section="after",spring_security_filterchain_position="10",spring_security_filterchain_size="10",spring_security_reached_filter_name="DisableEncodeUrlFilter"} 0.039935916
spring_security_filterchains_seconds_count{error="none",security_security_reached_filter_section="after",spring_security_filterchain_position="11",spring_security_filterchain_size="11",spring_security_reached_filter_name="DisableEncodeUrlFilter"} 46
spring_security_filterchains_seconds_sum{error="none",security_security_reached_filter_section="after",spring_security_filterchain_position="11",spring_security_filterchain_size="11",spring_security_reached_filter_name="DisableEncodeUrlFilter"} 0.012416689
spring_security_filterchains_seconds_count{error="none",security_security_reached_filter_section="after",spring_security_filterchain_position="12",spring_security_filterchain_size="12",spring_security_reached_filter_name="DisableEncodeUrlFilter"} 4
spring_security_filterchains_seconds_sum{error="none",security_security_reached_filter_section="after",spring_security_filterchain_position="12",spring_security_filterchain_size="12",spring_security_reached_filter_name="DisableEncodeUrlFilter"} 9.98352E-4
spring_security_filterchains_seconds_count{error="none",security_security_reached_filter_section="before",spring_security_filterchain_position="10",spring_security_filterchain_size="10",spring_security_reached_filter_name="ExceptionTranslationFilter"} 139
spring_security_filterchains_seconds_sum{error="none",security_security_reached_filter_section="before",spring_security_filterchain_position="10",spring_security_filterchain_size="10",spring_security_reached_filter_name="ExceptionTranslationFilter"} 0.099878702
spring_security_filterchains_seconds_count{error="none",security_security_reached_filter_section="before",spring_security_filterchain_position="11",spring_security_filterchain_size="11",spring_security_reached_filter_name="AuthorizationFilter"} 46
spring_security_filterchains_seconds_sum{error="none",security_security_reached_filter_section="before",spring_security_filterchain_position="11",spring_security_filterchain_size="11",spring_security_reached_filter_name="AuthorizationFilter"} 0.048205768
spring_security_filterchains_seconds_count{error="none",security_security_reached_filter_section="before",spring_security_filterchain_position="12",spring_security_filterchain_size="12",spring_security_reached_filter_name="AuthorizationFilter"} 4
spring_security_filterchains_seconds_sum{error="none",security_security_reached_filter_section="before",spring_security_filterchain_position="12",spring_security_filterchain_size="12",spring_security_reached_filter_name="AuthorizationFilter"} 0.030820803
# HELP spring_security_filterchains_seconds_max  
# TYPE spring_security_filterchains_seconds_max gauge
spring_security_filterchains_seconds_max{error="none",security_security_reached_filter_section="after",spring_security_filterchain_position="10",spring_security_filterchain_size="10",spring_security_reached_filter_name="DisableEncodeUrlFilter"} 3.26903E-4
spring_security_filterchains_seconds_max{error="none",security_security_reached_filter_section="after",spring_security_filterchain_position="11",spring_security_filterchain_size="11",spring_security_reached_filter_name="DisableEncodeUrlFilter"} 1.56843E-4
spring_security_filterchains_seconds_max{error="none",security_security_reached_filter_section="after",spring_security_filterchain_position="12",spring_security_filterchain_size="12",spring_security_reached_filter_name="DisableEncodeUrlFilter"} 0.0
spring_security_filterchains_seconds_max{error="none",security_security_reached_filter_section="before",spring_security_filterchain_position="10",spring_security_filterchain_size="10",spring_security_reached_filter_name="ExceptionTranslationFilter"} 5.48971E-4
spring_security_filterchains_seconds_max{error="none",security_security_reached_filter_section="before",spring_security_filterchain_position="11",spring_security_filterchain_size="11",spring_security_reached_filter_name="AuthorizationFilter"} 0.0010553
spring_security_filterchains_seconds_max{error="none",security_security_reached_filter_section="before",spring_security_filterchain_position="12",spring_security_filterchain_size="12",spring_security_reached_filter_name="AuthorizationFilter"} 0.0
# HELP spring_security_filterchains_session_management_after_total  
# TYPE spring_security_filterchains_session_management_after_total counter
spring_security_filterchains_session_management_after_total{security_security_reached_filter_section="after",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 188.0
# HELP spring_security_filterchains_session_management_before_total  
# TYPE spring_security_filterchains_session_management_before_total counter
spring_security_filterchains_session_management_before_total{security_security_reached_filter_section="before",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 189.0
# HELP spring_security_filterchains_session_urlencoding_after_total  
# TYPE spring_security_filterchains_session_urlencoding_after_total counter
spring_security_filterchains_session_urlencoding_after_total{security_security_reached_filter_section="after",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 188.0
# HELP spring_security_filterchains_session_urlencoding_before_total  
# TYPE spring_security_filterchains_session_urlencoding_before_total counter
spring_security_filterchains_session_urlencoding_before_total{security_security_reached_filter_section="before",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none"} 189.0
# HELP spring_security_http_secured_requests_active_seconds  
# TYPE spring_security_http_secured_requests_active_seconds summary
spring_security_http_secured_requests_active_seconds_count 1
spring_security_http_secured_requests_active_seconds_sum 0.004665509
# HELP spring_security_http_secured_requests_active_seconds_max  
# TYPE spring_security_http_secured_requests_active_seconds_max gauge
spring_security_http_secured_requests_active_seconds_max 0.004667892
# HELP spring_security_http_secured_requests_seconds  
# TYPE spring_security_http_secured_requests_seconds summary
spring_security_http_secured_requests_seconds_count{error="none"} 182
spring_security_http_secured_requests_seconds_sum{error="none"} 2.299059716
# HELP spring_security_http_secured_requests_seconds_max  
# TYPE spring_security_http_secured_requests_seconds_max gauge
spring_security_http_secured_requests_seconds_max{error="none"} 0.015930566
# HELP system_cpu_count The number of processors available to the Java virtual machine
# TYPE system_cpu_count gauge
system_cpu_count 12.0
# HELP system_cpu_usage The "recent cpu usage" of the system the application is running in
# TYPE system_cpu_usage gauge
system_cpu_usage 0.1958259325044405
# HELP system_load_average_1m The sum of the number of runnable entities queued to available processors and the number of runnable entities running on the available processors averaged over a period of time
# TYPE system_load_average_1m gauge
system_load_average_1m 2.21337890625
# HELP tasks_scheduled_execution_active_seconds  
# TYPE tasks_scheduled_execution_active_seconds summary
tasks_scheduled_execution_active_seconds_count{code_function="callbackQueueSizeAlert",code_namespace="com.matera.banco.cobranca.event.dispatcher.EventDispatcher",exception="none",outcome="UNKNOWN"} 0
tasks_scheduled_execution_active_seconds_sum{code_function="callbackQueueSizeAlert",code_namespace="com.matera.banco.cobranca.event.dispatcher.EventDispatcher",exception="none",outcome="UNKNOWN"} 0.0
tasks_scheduled_execution_active_seconds_count{code_function="producerQueueSizeAlert",code_namespace="com.matera.banco.cobranca.event.dispatcher.EventDispatcher",exception="none",outcome="UNKNOWN"} 0
tasks_scheduled_execution_active_seconds_sum{code_function="producerQueueSizeAlert",code_namespace="com.matera.banco.cobranca.event.dispatcher.EventDispatcher",exception="none",outcome="UNKNOWN"} 0.0
tasks_scheduled_execution_active_seconds_count{code_function="run",code_namespace="com.matera.banco.cobranca.event.job.JobRetentativaProducer",exception="none",outcome="UNKNOWN"} 0
tasks_scheduled_execution_active_seconds_sum{code_function="run",code_namespace="com.matera.banco.cobranca.event.job.JobRetentativaProducer",exception="none",outcome="UNKNOWN"} 0.0
# HELP tasks_scheduled_execution_active_seconds_max  
# TYPE tasks_scheduled_execution_active_seconds_max gauge
tasks_scheduled_execution_active_seconds_max{code_function="callbackQueueSizeAlert",code_namespace="com.matera.banco.cobranca.event.dispatcher.EventDispatcher",exception="none",outcome="UNKNOWN"} 0.0
tasks_scheduled_execution_active_seconds_max{code_function="producerQueueSizeAlert",code_namespace="com.matera.banco.cobranca.event.dispatcher.EventDispatcher",exception="none",outcome="UNKNOWN"} 0.0
tasks_scheduled_execution_active_seconds_max{code_function="run",code_namespace="com.matera.banco.cobranca.event.job.JobRetentativaProducer",exception="none",outcome="UNKNOWN"} 0.0
# HELP tasks_scheduled_execution_seconds  
# TYPE tasks_scheduled_execution_seconds summary
tasks_scheduled_execution_seconds_count{code_function="callbackQueueSizeAlert",code_namespace="com.matera.banco.cobranca.event.dispatcher.EventDispatcher",error="none",exception="none",outcome="SUCCESS"} 15
tasks_scheduled_execution_seconds_sum{code_function="callbackQueueSizeAlert",code_namespace="com.matera.banco.cobranca.event.dispatcher.EventDispatcher",error="none",exception="none",outcome="SUCCESS"} 0.006776071
tasks_scheduled_execution_seconds_count{code_function="producerQueueSizeAlert",code_namespace="com.matera.banco.cobranca.event.dispatcher.EventDispatcher",error="none",exception="none",outcome="SUCCESS"} 15
tasks_scheduled_execution_seconds_sum{code_function="producerQueueSizeAlert",code_namespace="com.matera.banco.cobranca.event.dispatcher.EventDispatcher",error="none",exception="none",outcome="SUCCESS"} 0.006627777
tasks_scheduled_execution_seconds_count{code_function="run",code_namespace="com.matera.banco.cobranca.event.job.JobRetentativaProducer",error="none",exception="none",outcome="SUCCESS"} 2
tasks_scheduled_execution_seconds_sum{code_function="run",code_namespace="com.matera.banco.cobranca.event.job.JobRetentativaProducer",error="none",exception="none",outcome="SUCCESS"} 0.129630144
# HELP tasks_scheduled_execution_seconds_max  
# TYPE tasks_scheduled_execution_seconds_max gauge
tasks_scheduled_execution_seconds_max{code_function="callbackQueueSizeAlert",code_namespace="com.matera.banco.cobranca.event.dispatcher.EventDispatcher",error="none",exception="none",outcome="SUCCESS"} 1.25401E-4
tasks_scheduled_execution_seconds_max{code_function="producerQueueSizeAlert",code_namespace="com.matera.banco.cobranca.event.dispatcher.EventDispatcher",error="none",exception="none",outcome="SUCCESS"} 1.23576E-4
tasks_scheduled_execution_seconds_max{code_function="run",code_namespace="com.matera.banco.cobranca.event.job.JobRetentativaProducer",error="none",exception="none",outcome="SUCCESS"} 0.0
# HELP tomcat_sessions_active_current_sessions  
# TYPE tomcat_sessions_active_current_sessions gauge
tomcat_sessions_active_current_sessions 0.0
# HELP tomcat_sessions_active_max_sessions  
# TYPE tomcat_sessions_active_max_sessions gauge
tomcat_sessions_active_max_sessions 0.0
# HELP tomcat_sessions_alive_max_seconds  
# TYPE tomcat_sessions_alive_max_seconds gauge
tomcat_sessions_alive_max_seconds 0.0
# HELP tomcat_sessions_created_sessions_total  
# TYPE tomcat_sessions_created_sessions_total counter
tomcat_sessions_created_sessions_total 0.0
# HELP tomcat_sessions_expired_sessions_total  
# TYPE tomcat_sessions_expired_sessions_total counter
tomcat_sessions_expired_sessions_total 0.0
# HELP tomcat_sessions_rejected_sessions_total  
# TYPE tomcat_sessions_rejected_sessions_total counter
tomcat_sessions_rejected_sessions_total 0.0
